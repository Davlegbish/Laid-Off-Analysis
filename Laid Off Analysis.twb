<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20241.24.0425.1340                               -->
<workbook original-version='18.1' source-build='2024.1.2 (20241.24.0425.1340)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AccessibleZoneTabOrder.true...AccessibleZoneTabOrder />
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelExtractV2.true...ObjectModelExtractV2 />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <_.fcp.VConnDownstreamExtractsWithWarnings.true...VConnDownstreamExtractsWithWarnings />
    <WindowsPersistSimpleIdentifiers />
    <ZoneBackgroundTransparency />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource caption='layoff analysis' inline='true' name='federated.1bljdu50nsme671f712ck0dpzk0v' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='layoff analysis' name='textscan.1v7u6ij1fak4yh1b2q5sv0vp9uws'>
            <connection class='textscan' directory='F:/SQL PROJECT' filename='layoff analysis.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.1v7u6ij1fak4yh1b2q5sv0vp9uws' name='layoff analysis.csv' table='[layoff analysis#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='string' name='company' ordinal='0' />
            <column datatype='string' name='location' ordinal='1' />
            <column datatype='string' name='industry' ordinal='2' />
            <column datatype='integer' name='total_laid_off' ordinal='3' />
            <column datatype='real' name='percentage_laid_off' ordinal='4' />
            <column datatype='date' name='date' ordinal='5' />
            <column datatype='string' name='stage' ordinal='6' />
            <column datatype='string' name='country' ordinal='7' />
            <column datatype='integer' name='funds_raised_millions' ordinal='8' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='textscan.1v7u6ij1fak4yh1b2q5sv0vp9uws' name='layoff analysis.csv' table='[layoff analysis#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='string' name='company' ordinal='0' />
            <column datatype='string' name='location' ordinal='1' />
            <column datatype='string' name='industry' ordinal='2' />
            <column datatype='integer' name='total_laid_off' ordinal='3' />
            <column datatype='real' name='percentage_laid_off' ordinal='4' />
            <column datatype='date' name='date' ordinal='5' />
            <column datatype='string' name='stage' ordinal='6' />
            <column datatype='string' name='country' ordinal='7' />
            <column datatype='integer' name='funds_raised_millions' ordinal='8' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[layoff analysis.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>company</remote-name>
            <remote-type>129</remote-type>
            <local-name>[company]</local-name>
            <parent-name>[layoff analysis.csv]</parent-name>
            <remote-alias>company</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[layoff analysis.csv_B87C25D384924E9BA3E49CDAE0ADD3B3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>location</remote-name>
            <remote-type>129</remote-type>
            <local-name>[location]</local-name>
            <parent-name>[layoff analysis.csv]</parent-name>
            <remote-alias>location</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[layoff analysis.csv_B87C25D384924E9BA3E49CDAE0ADD3B3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>industry</remote-name>
            <remote-type>129</remote-type>
            <local-name>[industry]</local-name>
            <parent-name>[layoff analysis.csv]</parent-name>
            <remote-alias>industry</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[layoff analysis.csv_B87C25D384924E9BA3E49CDAE0ADD3B3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_laid_off</remote-name>
            <remote-type>20</remote-type>
            <local-name>[total_laid_off]</local-name>
            <parent-name>[layoff analysis.csv]</parent-name>
            <remote-alias>total_laid_off</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[layoff analysis.csv_B87C25D384924E9BA3E49CDAE0ADD3B3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>percentage_laid_off</remote-name>
            <remote-type>5</remote-type>
            <local-name>[percentage_laid_off]</local-name>
            <parent-name>[layoff analysis.csv]</parent-name>
            <remote-alias>percentage_laid_off</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[layoff analysis.csv_B87C25D384924E9BA3E49CDAE0ADD3B3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>date</remote-name>
            <remote-type>133</remote-type>
            <local-name>[date]</local-name>
            <parent-name>[layoff analysis.csv]</parent-name>
            <remote-alias>date</remote-alias>
            <ordinal>5</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[layoff analysis.csv_B87C25D384924E9BA3E49CDAE0ADD3B3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>stage</remote-name>
            <remote-type>129</remote-type>
            <local-name>[stage]</local-name>
            <parent-name>[layoff analysis.csv]</parent-name>
            <remote-alias>stage</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[layoff analysis.csv_B87C25D384924E9BA3E49CDAE0ADD3B3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>country</remote-name>
            <remote-type>129</remote-type>
            <local-name>[country]</local-name>
            <parent-name>[layoff analysis.csv]</parent-name>
            <remote-alias>country</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[layoff analysis.csv_B87C25D384924E9BA3E49CDAE0ADD3B3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>funds_raised_millions</remote-name>
            <remote-type>20</remote-type>
            <local-name>[funds_raised_millions]</local-name>
            <parent-name>[layoff analysis.csv]</parent-name>
            <remote-alias>funds_raised_millions</remote-alias>
            <ordinal>8</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[layoff analysis.csv_B87C25D384924E9BA3E49CDAE0ADD3B3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <_.fcp.ObjectModelTableType.true...column caption='layoff analysis.csv' datatype='table' name='[__tableau_internal_object_id__].[layoff analysis.csv_B87C25D384924E9BA3E49CDAE0ADD3B3]' role='measure' type='quantitative' />
      <column caption='Company' datatype='string' name='[company]' role='dimension' type='nominal' />
      <column caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
      <column caption='Funds Raised Millions' datatype='integer' name='[funds_raised_millions]' role='measure' type='quantitative' />
      <column caption='Industry' datatype='string' name='[industry]' role='dimension' type='nominal' />
      <column caption='Location' datatype='string' name='[location]' role='dimension' type='nominal' />
      <column caption='Percentage Laid Off' datatype='real' name='[percentage_laid_off]' role='measure' type='quantitative' />
      <column caption='Stage' datatype='string' name='[stage]' role='dimension' type='nominal' />
      <column caption='Total Laid Off' datatype='integer' name='[total_laid_off]' role='measure' type='quantitative' />
      <column-instance column='[company]' derivation='None' name='[none:company:nk]' pivot='key' type='nominal' />
      <column-instance column='[date]' derivation='Year' name='[yr:date:ok]' pivot='key' type='ordinal' />
      <group caption='Action (Company)' hidden='true' name='[Action (Company)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[company]' />
        </groupfilter>
      </group>
      <group caption='Action (Country,Location)' hidden='true' name='[Action (Country,Location)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[country]' />
          <groupfilter function='level-members' level='[location]' />
        </groupfilter>
      </group>
      <group caption='Action (Industry)' hidden='true' name='[Action (Industry)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[industry]' />
        </groupfilter>
      </group>
      <group caption='Action (YEAR(Date))' hidden='true' name='[Action (YEAR(Date))]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[yr:date:ok]' />
        </groupfilter>
      </group>
      <drill-paths>
        <drill-path name='Geography'>
          <field>[country]</field>
          <field>[location]</field>
        </drill-path>
      </drill-paths>
      <extract _.fcp.ObjectModelExtractV2.true...object-id='' _.fcp.VConnDownstreamExtractsWithWarnings.true...user-specific='false' count='-1' enabled='true' units='records'>
        <connection access_mode='readonly' author-locale='en_US' class='hyper' dbname='C:/Users/Emeka/AppData/Local/Temp/TableauTemp/#TableauTemp_1nosuxl07mffnp16qnmd61bkiq4p.hyper' default-settings='hyper' schema='Extract' sslmode='' tablename='Extract' update-time='06/02/2024 06:27:44 PM' username='tableau_internal_user'>
          <_.fcp.ObjectModelEncapsulateLegacy.false...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <_.fcp.ObjectModelEncapsulateLegacy.true...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>company</remote-name>
              <remote-type>129</remote-type>
              <local-name>[company]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>company</remote-alias>
              <ordinal>0</ordinal>
              <family>layoff analysis.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>1280</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[layoff analysis.csv_B87C25D384924E9BA3E49CDAE0ADD3B3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>location</remote-name>
              <remote-type>129</remote-type>
              <local-name>[location]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>location</remote-alias>
              <ordinal>1</ordinal>
              <family>layoff analysis.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>140</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[layoff analysis.csv_B87C25D384924E9BA3E49CDAE0ADD3B3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>industry</remote-name>
              <remote-type>129</remote-type>
              <local-name>[industry]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>industry</remote-alias>
              <ordinal>2</ordinal>
              <family>layoff analysis.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>29</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[layoff analysis.csv_B87C25D384924E9BA3E49CDAE0ADD3B3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>total_laid_off</remote-name>
              <remote-type>20</remote-type>
              <local-name>[total_laid_off]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>total_laid_off</remote-alias>
              <ordinal>3</ordinal>
              <family>layoff analysis.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>259</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[layoff analysis.csv_B87C25D384924E9BA3E49CDAE0ADD3B3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>percentage_laid_off</remote-name>
              <remote-type>5</remote-type>
              <local-name>[percentage_laid_off]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>percentage_laid_off</remote-alias>
              <ordinal>4</ordinal>
              <family>layoff analysis.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>64</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[layoff analysis.csv_B87C25D384924E9BA3E49CDAE0ADD3B3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>date</remote-name>
              <remote-type>133</remote-type>
              <local-name>[date]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>date</remote-alias>
              <ordinal>5</ordinal>
              <family>layoff analysis.csv</family>
              <local-type>date</local-type>
              <aggregation>Year</aggregation>
              <approx-count>409</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[layoff analysis.csv_B87C25D384924E9BA3E49CDAE0ADD3B3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>stage</remote-name>
              <remote-type>129</remote-type>
              <local-name>[stage]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>stage</remote-alias>
              <ordinal>6</ordinal>
              <family>layoff analysis.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>16</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[layoff analysis.csv_B87C25D384924E9BA3E49CDAE0ADD3B3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>country</remote-name>
              <remote-type>129</remote-type>
              <local-name>[country]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>country</remote-alias>
              <ordinal>7</ordinal>
              <family>layoff analysis.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>45</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[layoff analysis.csv_B87C25D384924E9BA3E49CDAE0ADD3B3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>funds_raised_millions</remote-name>
              <remote-type>20</remote-type>
              <local-name>[funds_raised_millions]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>funds_raised_millions</remote-alias>
              <ordinal>8</ordinal>
              <family>layoff analysis.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>516</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[layoff analysis.csv_B87C25D384924E9BA3E49CDAE0ADD3B3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:company:nk]' palette='green_gold_10_0' type='palette'>
            <map to='#146c36'>
              <bucket>&quot;Yext&quot;</bucket>
            </map>
            <map to='#146c36'>
              <bucket>&quot;Zoom&quot;</bucket>
            </map>
            <map to='#146c36'>
              <bucket>&quot;Zscaler&quot;</bucket>
            </map>
            <map to='#156c36'>
              <bucket>&quot;Yellow.ai&quot;</bucket>
            </map>
            <map to='#156d37'>
              <bucket>&quot;Yahoo&quot;</bucket>
            </map>
            <map to='#166d37'>
              <bucket>&quot;Workday&quot;</bucket>
            </map>
            <map to='#166d37'>
              <bucket>&quot;Wyre&quot;</bucket>
            </map>
            <map to='#176d37'>
              <bucket>&quot;Workato&quot;</bucket>
            </map>
            <map to='#176e38'>
              <bucket>&quot;Wish&quot;</bucket>
            </map>
            <map to='#176e38'>
              <bucket>&quot;Wix&quot;</bucket>
            </map>
            <map to='#186e38'>
              <bucket>&quot;WHOOP&quot;</bucket>
            </map>
            <map to='#186f38'>
              <bucket>&quot;Wheel&quot;</bucket>
            </map>
            <map to='#196f39'>
              <bucket>&quot;WeTrade&quot;</bucket>
            </map>
            <map to='#196f39'>
              <bucket>&quot;WeWork&quot;</bucket>
            </map>
            <map to='#1a6f39'>
              <bucket>&quot;Wefox&quot;</bucket>
            </map>
            <map to='#1a7039'>
              <bucket>&quot;Waymo&quot;</bucket>
            </map>
            <map to='#1a703a'>
              <bucket>&quot;Wayfair&quot;</bucket>
            </map>
            <map to='#1b703a'>
              <bucket>&quot;Wallbox&quot;</bucket>
            </map>
            <map to='#1b713a'>
              <bucket>&quot;WalkMe&quot;</bucket>
            </map>
            <map to='#1c713a'>
              <bucket>&quot;Vroom&quot;</bucket>
            </map>
            <map to='#1c713b'>
              <bucket>&quot;Vox Media&quot;</bucket>
            </map>
            <map to='#1d713b'>
              <bucket>&quot;VinFast US&quot;</bucket>
            </map>
            <map to='#1d723b'>
              <bucket>&quot;Vicarious Surgical&quot;</bucket>
            </map>
            <map to='#1d723b'>
              <bucket>&quot;Vimeo&quot;</bucket>
            </map>
            <map to='#1e723c'>
              <bucket>&quot;Vial&quot;</bucket>
            </map>
            <map to='#1e723c'>
              <bucket>&quot;Vibrent Health&quot;</bucket>
            </map>
            <map to='#1f733c'>
              <bucket>&quot;Verily&quot;</bucket>
            </map>
            <map to='#1f733c'>
              <bucket>&quot;VerticalScope&quot;</bucket>
            </map>
            <map to='#20733d'>
              <bucket>&quot;Veriff&quot;</bucket>
            </map>
            <map to='#20743d'>
              <bucket>&quot;Velodyne Lidar&quot;</bucket>
            </map>
            <map to='#20743d'>
              <bucket>&quot;Venngage&quot;</bucket>
            </map>
            <map to='#21743d'>
              <bucket>&quot;Vacasa&quot;</bucket>
            </map>
            <map to='#21743e'>
              <bucket>&quot;UserTesting&quot;</bucket>
            </map>
            <map to='#22753e'>
              <bucket>&quot;UpScalio&quot;</bucket>
            </map>
            <map to='#22753e'>
              <bucket>&quot;Upstart&quot;</bucket>
            </map>
            <map to='#23753e'>
              <bucket>&quot;UpGrad&quot;</bucket>
            </map>
            <map to='#23763f'>
              <bucket>&quot;Uniphore&quot;</bucket>
            </map>
            <map to='#23763f'>
              <bucket>&quot;Unity&quot;</bucket>
            </map>
            <map to='#24763f'>
              <bucket>&quot;Udemy&quot;</bucket>
            </map>
            <map to='#24763f'>
              <bucket>&quot;Unico&quot;</bucket>
            </map>
            <map to='#257740'>
              <bucket>&quot;Twine Solutions&quot;</bucket>
            </map>
            <map to='#257740'>
              <bucket>&quot;Twitter&quot;</bucket>
            </map>
            <map to='#257740'>
              <bucket>&quot;Uber Freight&quot;</bucket>
            </map>
            <map to='#267840'>
              <bucket>&quot;Twilio&quot;</bucket>
            </map>
            <map to='#267841'>
              <bucket>&quot;TripleLift&quot;</bucket>
            </map>
            <map to='#267841'>
              <bucket>&quot;Tul&quot;</bucket>
            </map>
            <map to='#277941'>
              <bucket>&quot;Tilting Point&quot;</bucket>
            </map>
            <map to='#277941'>
              <bucket>&quot;Tipalti&quot;</bucket>
            </map>
            <map to='#287942'>
              <bucket>&quot;TikTok India&quot;</bucket>
            </map>
            <map to='#287942'>
              <bucket>&quot;Till Payments&quot;</bucket>
            </map>
            <map to='#287a42'>
              <bucket>&quot;Tier Mobility&quot;</bucket>
            </map>
            <map to='#297a42'>
              <bucket>&quot;Thoughtworks&quot;</bucket>
            </map>
            <map to='#297a43'>
              <bucket>&quot;Thinkific&quot;</bucket>
            </map>
            <map to='#297b43'>
              <bucket>&quot;TheSkimm&quot;</bucket>
            </map>
            <map to='#2a7b43'>
              <bucket>&quot;The Iconic&quot;</bucket>
            </map>
            <map to='#2a7b43'>
              <bucket>&quot;The RealReal&quot;</bucket>
            </map>
            <map to='#2a7c44'>
              <bucket>&quot;Tencent&quot;</bucket>
            </map>
            <map to='#2b7c44'>
              <bucket>&quot;TaskUs&quot;</bucket>
            </map>
            <map to='#2b7c44'>
              <bucket>&quot;TCR2&quot;</bucket>
            </map>
            <map to='#2b7c44'>
              <bucket>&quot;Teladoc Health&quot;</bucket>
            </map>
            <map to='#2c7d45'>
              <bucket>&quot;Synopsys&quot;</bucket>
            </map>
            <map to='#2c7d45'>
              <bucket>&quot;Tackle&quot;</bucket>
            </map>
            <map to='#2d7d45'>
              <bucket>&quot;Synamedia&quot;</bucket>
            </map>
            <map to='#2d7e45'>
              <bucket>&quot;Swiggy&quot;</bucket>
            </map>
            <map to='#2d7e46'>
              <bucket>&quot;SuperRare&quot;</bucket>
            </map>
            <map to='#2e7e46'>
              <bucket>&quot;Stytch&quot;</bucket>
            </map>
            <map to='#2e7f46'>
              <bucket>&quot;StrongDM&quot;</bucket>
            </map>
            <map to='#2e7f47'>
              <bucket>&quot;StreamElements&quot;</bucket>
            </map>
            <map to='#2f7f47'>
              <bucket>&quot;Stitch Fix&quot;</bucket>
            </map>
            <map to='#2f8047'>
              <bucket>&quot;Starry&quot;</bucket>
            </map>
            <map to='#2f8047'>
              <bucket>&quot;Stax&quot;</bucket>
            </map>
            <map to='#308048'>
              <bucket>&quot;Sprinklr&quot;</bucket>
            </map>
            <map to='#308048'>
              <bucket>&quot;SSense&quot;</bucket>
            </map>
            <map to='#308148'>
              <bucket>&quot;Spotify&quot;</bucket>
            </map>
            <map to='#318148'>
              <bucket>&quot;Splunk&quot;</bucket>
            </map>
            <map to='#318149'>
              <bucket>&quot;SoundHound&quot;</bucket>
            </map>
            <map to='#328249'>
              <bucket>&quot;Sonder&quot;</bucket>
            </map>
            <map to='#328249'>
              <bucket>&quot;Sono Motors&quot;</bucket>
            </map>
            <map to='#328249'>
              <bucket>&quot;Sophos&quot;</bucket>
            </map>
            <map to='#33834a'>
              <bucket>&quot;Snappy&quot;</bucket>
            </map>
            <map to='#33834a'>
              <bucket>&quot;Snowplow&quot;</bucket>
            </map>
            <map to='#33834a'>
              <bucket>&quot;Socure&quot;</bucket>
            </map>
            <map to='#33834a'>
              <bucket>&quot;Software AG&quot;</bucket>
            </map>
            <map to='#34844a'>
              <bucket>&quot;Skit.ai&quot;</bucket>
            </map>
            <map to='#34844a'>
              <bucket>&quot;SmartNews&quot;</bucket>
            </map>
            <map to='#34844a'>
              <bucket>&quot;Smartsheet&quot;</bucket>
            </map>
            <map to='#35854a'>
              <bucket>&quot;SiriusXM&quot;</bucket>
            </map>
            <map to='#35854b'>
              <bucket>&quot;Shutterfly&quot;</bucket>
            </map>
            <map to='#35854b'>
              <bucket>&quot;SirionLabs&quot;</bucket>
            </map>
            <map to='#36864b'>
              <bucket>&quot;ServiceTitan&quot;</bucket>
            </map>
            <map to='#36864b'>
              <bucket>&quot;Shakepay&quot;</bucket>
            </map>
            <map to='#36864b'>
              <bucket>&quot;ShareChat&quot;</bucket>
            </map>
            <map to='#37874b'>
              <bucket>&quot;Scale AI&quot;</bucket>
            </map>
            <map to='#37874b'>
              <bucket>&quot;Scoro&quot;</bucket>
            </map>
            <map to='#37874b'>
              <bucket>&quot;SecureWorks&quot;</bucket>
            </map>
            <map to='#37874c'>
              <bucket>&quot;SAP Labs&quot;</bucket>
            </map>
            <map to='#38884c'>
              <bucket>&quot;Salesloft&quot;</bucket>
            </map>
            <map to='#38884c'>
              <bucket>&quot;Sana Benefits&quot;</bucket>
            </map>
            <map to='#38884c'>
              <bucket>&quot;SAP&quot;</bucket>
            </map>
            <map to='#39894c'>
              <bucket>&quot;Ruggable&quot;</bucket>
            </map>
            <map to='#39894c'>
              <bucket>&quot;Saks.com&quot;</bucket>
            </map>
            <map to='#39894c'>
              <bucket>&quot;Salesforce&quot;</bucket>
            </map>
            <map to='#3a8a4c'>
              <bucket>&quot;Rock Content&quot;</bucket>
            </map>
            <map to='#3a8a4d'>
              <bucket>&quot;RingCentral&quot;</bucket>
            </map>
            <map to='#3a8a4d'>
              <bucket>&quot;Riot Games&quot;</bucket>
            </map>
            <map to='#3a8a4d'>
              <bucket>&quot;Rivian&quot;</bucket>
            </map>
            <map to='#3b8b4d'>
              <bucket>&quot;REE Automotive&quot;</bucket>
            </map>
            <map to='#3b8b4d'>
              <bucket>&quot;Relevel&quot;</bucket>
            </map>
            <map to='#3b8b4d'>
              <bucket>&quot;Rigetti Computing&quot;</bucket>
            </map>
            <map to='#3c8c4d'>
              <bucket>&quot;Rebel Foods&quot;</bucket>
            </map>
            <map to='#3c8c4d'>
              <bucket>&quot;Redbubble&quot;</bucket>
            </map>
            <map to='#3c8c4e'>
              <bucket>&quot;Quantum SI&quot;</bucket>
            </map>
            <map to='#3d8d4e'>
              <bucket>&quot;Proterra&quot;</bucket>
            </map>
            <map to='#3d8d4e'>
              <bucket>&quot;Protocol Labs&quot;</bucket>
            </map>
            <map to='#3d8d4e'>
              <bucket>&quot;Qualtrics&quot;</bucket>
            </map>
            <map to='#3e8e4e'>
              <bucket>&quot;Prime Trust&quot;</bucket>
            </map>
            <map to='#3e8e4e'>
              <bucket>&quot;Prisma&quot;</bucket>
            </map>
            <map to='#3e8e4e'>
              <bucket>&quot;Prosus&quot;</bucket>
            </map>
            <map to='#3e8e4e'>
              <bucket>&quot;Protego Trust Bank&quot;</bucket>
            </map>
            <map to='#3f8f4f'>
              <bucket>&quot;Pocket Aces&quot;</bucket>
            </map>
            <map to='#3f8f4f'>
              <bucket>&quot;Polygon&quot;</bucket>
            </map>
            <map to='#3f8f4f'>
              <bucket>&quot;Poshmark&quot;</bucket>
            </map>
            <map to='#40904f'>
              <bucket>&quot;Pier&quot;</bucket>
            </map>
            <map to='#40904f'>
              <bucket>&quot;Pinterest&quot;</bucket>
            </map>
            <map to='#40904f'>
              <bucket>&quot;Plus One Robotics&quot;</bucket>
            </map>
            <map to='#41914f'>
              <bucket>&quot;PhableCare&quot;</bucket>
            </map>
            <map to='#41914f'>
              <bucket>&quot;Philips&quot;</bucket>
            </map>
            <map to='#41914f'>
              <bucket>&quot;Pico Interactive&quot;</bucket>
            </map>
            <map to='#41924f'>
              <bucket>&quot;PetLove&quot;</bucket>
            </map>
            <map to='#429250'>
              <bucket>&quot;Personalis&quot;</bucket>
            </map>
            <map to='#429250'>
              <bucket>&quot;Personetics&quot;</bucket>
            </map>
            <map to='#429350'>
              <bucket>&quot;Pegasystems&quot;</bucket>
            </map>
            <map to='#439350'>
              <bucket>&quot;PayPal&quot;</bucket>
            </map>
            <map to='#439350'>
              <bucket>&quot;Pecan AI&quot;</bucket>
            </map>
            <map to='#439450'>
              <bucket>&quot;PayFit&quot;</bucket>
            </map>
            <map to='#449450'>
              <bucket>&quot;Parler&quot;</bucket>
            </map>
            <map to='#449450'>
              <bucket>&quot;PartnerStack&quot;</bucket>
            </map>
            <map to='#449550'>
              <bucket>&quot;Palantir&quot;</bucket>
            </map>
            <map to='#459551'>
              <bucket>&quot;PagerDuty&quot;</bucket>
            </map>
            <map to='#459551'>
              <bucket>&quot;PagSeguro&quot;</bucket>
            </map>
            <map to='#459651'>
              <bucket>&quot;Pagaya&quot;</bucket>
            </map>
            <map to='#459651'>
              <bucket>&quot;PagBank&quot;</bucket>
            </map>
            <map to='#469651'>
              <bucket>&quot;Paddle&quot;</bucket>
            </map>
            <map to='#469751'>
              <bucket>&quot;Oportun&quot;</bucket>
            </map>
            <map to='#469751'>
              <bucket>&quot;Outreach&quot;</bucket>
            </map>
            <map to='#479751'>
              <bucket>&quot;OpenText&quot;</bucket>
            </map>
            <map to='#479851'>
              <bucket>&quot;OneFootball&quot;</bucket>
            </map>
            <map to='#479851'>
              <bucket>&quot;Openpay&quot;</bucket>
            </map>
            <map to='#489852'>
              <bucket>&quot;OLX Group&quot;</bucket>
            </map>
            <map to='#489952'>
              <bucket>&quot;Okta&quot;</bucket>
            </map>
            <map to='#489952'>
              <bucket>&quot;Ola&quot;</bucket>
            </map>
            <map to='#489952'>
              <bucket>&quot;Olive AI&quot;</bucket>
            </map>
            <map to='#499a52'>
              <bucket>&quot;NetApp&quot;</bucket>
            </map>
            <map to='#499a52'>
              <bucket>&quot;Nomad Health&quot;</bucket>
            </map>
            <map to='#499a52'>
              <bucket>&quot;OFFOR Health&quot;</bucket>
            </map>
            <map to='#4a9b52'>
              <bucket>&quot;NCSoft&quot;</bucket>
            </map>
            <map to='#4a9b52'>
              <bucket>&quot;Nearmap&quot;</bucket>
            </map>
            <map to='#4a9b52'>
              <bucket>&quot;Neon&quot;</bucket>
            </map>
            <map to='#4b9c53'>
              <bucket>&quot;NCC Group&quot;</bucket>
            </map>
            <map to='#4b9c53'>
              <bucket>&quot;nCino&quot;</bucket>
            </map>
            <map to='#4c9c53'>
              <bucket>&quot;Namogoo&quot;</bucket>
            </map>
            <map to='#4c9c53'>
              <bucket>&quot;National Instruments&quot;</bucket>
            </map>
            <map to='#4d9d53'>
              <bucket>&quot;Mudafy&quot;</bucket>
            </map>
            <map to='#4d9d53'>
              <bucket>&quot;MyGate&quot;</bucket>
            </map>
            <map to='#4e9d53'>
              <bucket>&quot;Moladin&quot;</bucket>
            </map>
            <map to='#4e9d53'>
              <bucket>&quot;Momentive&quot;</bucket>
            </map>
            <map to='#4f9e53'>
              <bucket>&quot;Mojo Vision&quot;</bucket>
            </map>
            <map to='#509e53'>
              <bucket>&quot;Mode Global&quot;</bucket>
            </map>
            <map to='#509e53'>
              <bucket>&quot;Moglix&quot;</bucket>
            </map>
            <map to='#519e53'>
              <bucket>&quot;Misfits Market&quot;</bucket>
            </map>
            <map to='#519f53'>
              <bucket>&quot;Miro&quot;</bucket>
            </map>
            <map to='#529f54'>
              <bucket>&quot;Mindstrong&quot;</bucket>
            </map>
            <map to='#529f54'>
              <bucket>&quot;Minute Media&quot;</bucket>
            </map>
            <map to='#539f54'>
              <bucket>&quot;Milkrun&quot;</bucket>
            </map>
            <map to='#53a054'>
              <bucket>&quot;Microsoft&quot;</bucket>
            </map>
            <map to='#54a054'>
              <bucket>&quot;MeridianLink&quot;</bucket>
            </map>
            <map to='#54a054'>
              <bucket>&quot;Messari&quot;</bucket>
            </map>
            <map to='#55a054'>
              <bucket>&quot;Merative&quot;</bucket>
            </map>
            <map to='#55a154'>
              <bucket>&quot;Medly&quot;</bucket>
            </map>
            <map to='#56a154'>
              <bucket>&quot;Medallia&quot;</bucket>
            </map>
            <map to='#56a154'>
              <bucket>&quot;MediBuddy&quot;</bucket>
            </map>
            <map to='#57a154'>
              <bucket>&quot;Me Poupe&quot;</bucket>
            </map>
            <map to='#58a254'>
              <bucket>&quot;Match Group&quot;</bucket>
            </map>
            <map to='#58a254'>
              <bucket>&quot;Matrixport&quot;</bucket>
            </map>
            <map to='#59a255'>
              <bucket>&quot;MariaDB&quot;</bucket>
            </map>
            <map to='#59a255'>
              <bucket>&quot;MasterClass&quot;</bucket>
            </map>
            <map to='#5aa355'>
              <bucket>&quot;Magnite&quot;</bucket>
            </map>
            <map to='#5aa355'>
              <bucket>&quot;Mapbox&quot;</bucket>
            </map>
            <map to='#5ba355'>
              <bucket>&quot;Luxury Presence&quot;</bucket>
            </map>
            <map to='#5ba355'>
              <bucket>&quot;Magic Eden&quot;</bucket>
            </map>
            <map to='#5ca455'>
              <bucket>&quot;Lucira Health&quot;</bucket>
            </map>
            <map to='#5ca455'>
              <bucket>&quot;Luno&quot;</bucket>
            </map>
            <map to='#5da455'>
              <bucket>&quot;Loggi&quot;</bucket>
            </map>
            <map to='#5da455'>
              <bucket>&quot;Lucid Diagnostics&quot;</bucket>
            </map>
            <map to='#5ea555'>
              <bucket>&quot;Locomation&quot;</bucket>
            </map>
            <map to='#5ea555'>
              <bucket>&quot;Loft&quot;</bucket>
            </map>
            <map to='#5fa555'>
              <bucket>&quot;LiveVox&quot;</bucket>
            </map>
            <map to='#60a656'>
              <bucket>&quot;Lightspeed Commerce&quot;</bucket>
            </map>
            <map to='#60a656'>
              <bucket>&quot;Limeade&quot;</bucket>
            </map>
            <map to='#61a656'>
              <bucket>&quot;Lightico&quot;</bucket>
            </map>
            <map to='#62a656'>
              <bucket>&quot;Life360&quot;</bucket>
            </map>
            <map to='#62a756'>
              <bucket>&quot;Lending Club&quot;</bucket>
            </map>
            <map to='#63a756'>
              <bucket>&quot;Lendi&quot;</bucket>
            </map>
            <map to='#64a756'>
              <bucket>&quot;LearnUpon&quot;</bucket>
            </map>
            <map to='#64a856'>
              <bucket>&quot;LEAD&quot;</bucket>
            </map>
            <map to='#65a856'>
              <bucket>&quot;Lattice&quot;</bucket>
            </map>
            <map to='#66a856'>
              <bucket>&quot;Lantern&quot;</bucket>
            </map>
            <map to='#67a956'>
              <bucket>&quot;Kyruus&quot;</bucket>
            </map>
            <map to='#67a956'>
              <bucket>&quot;Lam Research&quot;</bucket>
            </map>
            <map to='#68a956'>
              <bucket>&quot;Koho&quot;</bucket>
            </map>
            <map to='#69a956'>
              <bucket>&quot;Kinde&quot;</bucket>
            </map>
            <map to='#69aa56'>
              <bucket>&quot;Karat&quot;</bucket>
            </map>
            <map to='#6aaa56'>
              <bucket>&quot;Kandela&quot;</bucket>
            </map>
            <map to='#6baa56'>
              <bucket>&quot;Kaltura&quot;</bucket>
            </map>
            <map to='#6cab56'>
              <bucket>&quot;Jumio&quot;</bucket>
            </map>
            <map to='#6cab56'>
              <bucket>&quot;Jumpcloud&quot;</bucket>
            </map>
            <map to='#6dab56'>
              <bucket>&quot;Jounce Therapeutics&quot;</bucket>
            </map>
            <map to='#6eac56'>
              <bucket>&quot;Jellyfish&quot;</bucket>
            </map>
            <map to='#6eac56'>
              <bucket>&quot;Jellysmack&quot;</bucket>
            </map>
            <map to='#6fac56'>
              <bucket>&quot;iRobot&quot;</bucket>
            </map>
            <map to='#70ad56'>
              <bucket>&quot;Intrinsic&quot;</bucket>
            </map>
            <map to='#71ad56'>
              <bucket>&quot;Inspirato&quot;</bucket>
            </map>
            <map to='#71ad56'>
              <bucket>&quot;Intel&quot;</bucket>
            </map>
            <map to='#72ad56'>
              <bucket>&quot;Innovid&quot;</bucket>
            </map>
            <map to='#73ae56'>
              <bucket>&quot;Inmobi&quot;</bucket>
            </map>
            <map to='#73ae56'>
              <bucket>&quot;Innovaccer&quot;</bucket>
            </map>
            <map to='#74ae56'>
              <bucket>&quot;Informatica&quot;</bucket>
            </map>
            <map to='#75af56'>
              <bucket>&quot;Impossible Foods copy&quot;</bucket>
            </map>
            <map to='#76af56'>
              <bucket>&quot;Ignition&quot;</bucket>
            </map>
            <map to='#76af56'>
              <bucket>&quot;Immutable&quot;</bucket>
            </map>
            <map to='#77b056'>
              <bucket>&quot;iFood&quot;</bucket>
            </map>
            <map to='#78b056'>
              <bucket>&quot;Hydrow&quot;</bucket>
            </map>
            <map to='#78b056'>
              <bucket>&quot;IBM&quot;</bucket>
            </map>
            <map to='#79b056'>
              <bucket>&quot;Huobi&quot;</bucket>
            </map>
            <map to='#7ab156'>
              <bucket>&quot;HubSpot&quot;</bucket>
            </map>
            <map to='#7bb156'>
              <bucket>&quot;HP&quot;</bucket>
            </map>
            <map to='#7bb156'>
              <bucket>&quot;Hubilo&quot;</bucket>
            </map>
            <map to='#7cb257'>
              <bucket>&quot;Hootsuite&quot;</bucket>
            </map>
            <map to='#7db257'>
              <bucket>&quot;Heycar&quot;</bucket>
            </map>
            <map to='#7db257'>
              <bucket>&quot;Highspot&quot;</bucket>
            </map>
            <map to='#7eb257'>
              <bucket>&quot;HashiCorp&quot;</bucket>
            </map>
            <map to='#7fb357'>
              <bucket>&quot;HackerEarth&quot;</bucket>
            </map>
            <map to='#7fb357'>
              <bucket>&quot;Harappa&quot;</bucket>
            </map>
            <map to='#80b357'>
              <bucket>&quot;Gusto&quot;</bucket>
            </map>
            <map to='#81b357'>
              <bucket>&quot;Guardant Health&quot;</bucket>
            </map>
            <map to='#82b357'>
              <bucket>&quot;Groupon&quot;</bucket>
            </map>
            <map to='#82b457'>
              <bucket>&quot;Greenlight&quot;</bucket>
            </map>
            <map to='#83b457'>
              <bucket>&quot;Gramophone&quot;</bucket>
            </map>
            <map to='#84b457'>
              <bucket>&quot;Gong&quot;</bucket>
            </map>
            <map to='#84b457'>
              <bucket>&quot;Google&quot;</bucket>
            </map>
            <map to='#85b557'>
              <bucket>&quot;GoMechanic&quot;</bucket>
            </map>
            <map to='#86b557'>
              <bucket>&quot;Gokada&quot;</bucket>
            </map>
            <map to='#87b557'>
              <bucket>&quot;GoBolt&quot;</bucket>
            </map>
            <map to='#87b557'>
              <bucket>&quot;GoDaddy&quot;</bucket>
            </map>
            <map to='#88b657'>
              <bucket>&quot;Glovo&quot;</bucket>
            </map>
            <map to='#89b657'>
              <bucket>&quot;GitLab&quot;</bucket>
            </map>
            <map to='#89b657'>
              <bucket>&quot;Gitpod&quot;</bucket>
            </map>
            <map to='#8ab658'>
              <bucket>&quot;GitHub&quot;</bucket>
            </map>
            <map to='#8bb658'>
              <bucket>&quot;Getir&quot;</bucket>
            </map>
            <map to='#8cb758'>
              <bucket>&quot;Genesis&quot;</bucket>
            </map>
            <map to='#8cb758'>
              <bucket>&quot;Getaround&quot;</bucket>
            </map>
            <map to='#8db758'>
              <bucket>&quot;Gemini&quot;</bucket>
            </map>
            <map to='#8eb758'>
              <bucket>&quot;Frequency Therapeutics&quot;</bucket>
            </map>
            <map to='#8eb858'>
              <bucket>&quot;ForeScout&quot;</bucket>
            </map>
            <map to='#8fb858'>
              <bucket>&quot;Flexport&quot;</bucket>
            </map>
            <map to='#90b858'>
              <bucket>&quot;Fittr&quot;</bucket>
            </map>
            <map to='#91b858'>
              <bucket>&quot;Fipola&quot;</bucket>
            </map>
            <map to='#91b858'>
              <bucket>&quot;Fireblocks&quot;</bucket>
            </map>
            <map to='#92b958'>
              <bucket>&quot;Finder&quot;</bucket>
            </map>
            <map to='#93b958'>
              <bucket>&quot;FarEye&quot;</bucket>
            </map>
            <map to='#93b958'>
              <bucket>&quot;Fate Therapeutics&quot;</bucket>
            </map>
            <map to='#94b958'>
              <bucket>&quot;Exterro&quot;</bucket>
            </map>
            <map to='#95ba58'>
              <bucket>&quot;Exotel&quot;</bucket>
            </map>
            <map to='#96ba58'>
              <bucket>&quot;Evernote&quot;</bucket>
            </map>
            <map to='#96ba58'>
              <bucket>&quot;EVgo&quot;</bucket>
            </map>
            <map to='#97ba58'>
              <bucket>&quot;Everlane&quot;</bucket>
            </map>
            <map to='#98bb59'>
              <bucket>&quot;Ethos Life&quot;</bucket>
            </map>
            <map to='#98bb59'>
              <bucket>&quot;Eventbrite&quot;</bucket>
            </map>
            <map to='#99bb59'>
              <bucket>&quot;Esper&quot;</bucket>
            </map>
            <map to='#9abb59'>
              <bucket>&quot;Ermetic&quot;</bucket>
            </map>
            <map to='#9bbb59'>
              <bucket>&quot;Ericsson&quot;</bucket>
            </map>
            <map to='#9bbc59'>
              <bucket>&quot;Equitybee&quot;</bucket>
            </map>
            <map to='#9cbc59'>
              <bucket>&quot;Enjoei&quot;</bucket>
            </map>
            <map to='#9dbc59'>
              <bucket>&quot;EMX Digital&quot;</bucket>
            </map>
            <map to='#9ebc59'>
              <bucket>&quot;Embark Trucks&quot;</bucket>
            </map>
            <map to='#9fbc59'>
              <bucket>&quot;Embark&quot;</bucket>
            </map>
            <map to='#9fbd59'>
              <bucket>&quot;Electronic Arts&quot;</bucket>
            </map>
            <map to='#a0bd59'>
              <bucket>&quot;Electric&quot;</bucket>
            </map>
            <map to='#a1bd59'>
              <bucket>&quot;Editas Medicine&quot;</bucket>
            </map>
            <map to='#a2bd5a'>
              <bucket>&quot;eBay&quot;</bucket>
            </map>
            <map to='#a2bd5a'>
              <bucket>&quot;Edifecs&quot;</bucket>
            </map>
            <map to='#a3be5a'>
              <bucket>&quot;Eat Just&quot;</bucket>
            </map>
            <map to='#a4be5a'>
              <bucket>&quot;Earth Rides&quot;</bucket>
            </map>
            <map to='#a5be5a'>
              <bucket>&quot;Dunzo&quot;</bucket>
            </map>
            <map to='#a5be5a'>
              <bucket>&quot;DUX Education&quot;</bucket>
            </map>
            <map to='#a6be5a'>
              <bucket>&quot;DriveWealth&quot;</bucket>
            </map>
            <map to='#a7bf5a'>
              <bucket>&quot;Drift&quot;</bucket>
            </map>
            <map to='#a8bf5a'>
              <bucket>&quot;DocuSign&quot;</bucket>
            </map>
            <map to='#a8bf5a'>
              <bucket>&quot;DraftKings&quot;</bucket>
            </map>
            <map to='#a9bf5a'>
              <bucket>&quot;DigitalOcean&quot;</bucket>
            </map>
            <map to='#aabf5a'>
              <bucket>&quot;Dell&quot;</bucket>
            </map>
            <map to='#abc05a'>
              <bucket>&quot;Deliveroo&quot;</bucket>
            </map>
            <map to='#abc05a'>
              <bucket>&quot;Delivery Hero&quot;</bucket>
            </map>
            <map to='#acc05b'>
              <bucket>&quot;DeHaat&quot;</bucket>
            </map>
            <map to='#adc05b'>
              <bucket>&quot;Definitive Healthcare&quot;</bucket>
            </map>
            <map to='#aec05b'>
              <bucket>&quot;DealShare&quot;</bucket>
            </map>
            <map to='#aec15b'>
              <bucket>&quot;Daraz&quot;</bucket>
            </map>
            <map to='#afc15b'>
              <bucket>&quot;Dapper Labs&quot;</bucket>
            </map>
            <map to='#b0c15b'>
              <bucket>&quot;Cyteir Therapeutics&quot;</bucket>
            </map>
            <map to='#b1c15b'>
              <bucket>&quot;Cyren&quot;</bucket>
            </map>
            <map to='#b2c15b'>
              <bucket>&quot;Cue&quot;</bucket>
            </map>
            <map to='#b2c25b'>
              <bucket>&quot;CS Disco&quot;</bucket>
            </map>
            <map to='#b3c25b'>
              <bucket>&quot;Crypto.com&quot;</bucket>
            </map>
            <map to='#b4c25b'>
              <bucket>&quot;Crunchyroll&quot;</bucket>
            </map>
            <map to='#b5c25b'>
              <bucket>&quot;ConsenSys&quot;</bucket>
            </map>
            <map to='#b5c25b'>
              <bucket>&quot;Corvus Insurance&quot;</bucket>
            </map>
            <map to='#b6c35c'>
              <bucket>&quot;Confluent&quot;</bucket>
            </map>
            <map to='#b7c35c'>
              <bucket>&quot;CommerceHub&quot;</bucket>
            </map>
            <map to='#b8c35c'>
              <bucket>&quot;Collective Health&quot;</bucket>
            </map>
            <map to='#b8c35c'>
              <bucket>&quot;Color Health&quot;</bucket>
            </map>
            <map to='#b9c35c'>
              <bucket>&quot;CoinTracker&quot;</bucket>
            </map>
            <map to='#bac45c'>
              <bucket>&quot;CoinDCX&quot;</bucket>
            </map>
            <map to='#bbc45c'>
              <bucket>&quot;Coinbase&quot;</bucket>
            </map>
            <map to='#bcc45c'>
              <bucket>&quot;CNET&quot;</bucket>
            </map>
            <map to='#bcc45c'>
              <bucket>&quot;CoachHub&quot;</bucket>
            </map>
            <map to='#bdc45c'>
              <bucket>&quot;Clutch&quot;</bucket>
            </map>
            <map to='#bec45d'>
              <bucket>&quot;Clue&quot;</bucket>
            </map>
            <map to='#bfc55d'>
              <bucket>&quot;ClearCo&quot;</bucket>
            </map>
            <map to='#c0c55d'>
              <bucket>&quot;Clari&quot;</bucket>
            </map>
            <map to='#c0c55d'>
              <bucket>&quot;Clear Capital&quot;</bucket>
            </map>
            <map to='#c1c55d'>
              <bucket>&quot;Citrix&quot;</bucket>
            </map>
            <map to='#c2c55d'>
              <bucket>&quot;Citrine Informatics&quot;</bucket>
            </map>
            <map to='#c3c55d'>
              <bucket>&quot;Citizen&quot;</bucket>
            </map>
            <map to='#c4c65d'>
              <bucket>&quot;Chipper Cash&quot;</bucket>
            </map>
            <map to='#c4c65d'>
              <bucket>&quot;Chrono24&quot;</bucket>
            </map>
            <map to='#c5c65e'>
              <bucket>&quot;Chainalysis&quot;</bucket>
            </map>
            <map to='#c6c65e'>
              <bucket>&quot;Cerebral&quot;</bucket>
            </map>
            <map to='#c7c65e'>
              <bucket>&quot;Catch.com.au&quot;</bucket>
            </map>
            <map to='#c7c75e'>
              <bucket>&quot;Cashfree Payments&quot;</bucket>
            </map>
            <map to='#c8c75e'>
              <bucket>&quot;Casavo&quot;</bucket>
            </map>
            <map to='#c9c75e'>
              <bucket>&quot;Carta&quot;</bucket>
            </map>
            <map to='#cac75e'>
              <bucket>&quot;Career Karma&quot;</bucket>
            </map>
            <map to='#cbc75e'>
              <bucket>&quot;Captain Fresh&quot;</bucket>
            </map>
            <map to='#cbc75e'>
              <bucket>&quot;Carbon Health&quot;</bucket>
            </map>
            <map to='#ccc85e'>
              <bucket>&quot;Capital One&quot;</bucket>
            </map>
            <map to='#cdc85f'>
              <bucket>&quot;Camp K12&quot;</bucket>
            </map>
            <map to='#cec85f'>
              <bucket>&quot;ByteDance&quot;</bucket>
            </map>
            <map to='#cfc85f'>
              <bucket>&quot;Butterfly Network&quot;</bucket>
            </map>
            <map to='#cfc85f'>
              <bucket>&quot;Byju&apos;s&quot;</bucket>
            </map>
            <map to='#d0c95f'>
              <bucket>&quot;Bustle Digital Group&quot;</bucket>
            </map>
            <map to='#d1c95f'>
              <bucket>&quot;Britishvolt&quot;</bucket>
            </map>
            <map to='#d2c95f'>
              <bucket>&quot;Booktopia&quot;</bucket>
            </map>
            <map to='#d2c95f'>
              <bucket>&quot;Bounce&quot;</bucket>
            </map>
            <map to='#d3c95f'>
              <bucket>&quot;Bonterra&quot;</bucket>
            </map>
            <map to='#d4c95f'>
              <bucket>&quot;Bolt&quot;</bucket>
            </map>
            <map to='#d5ca60'>
              <bucket>&quot;BM Technologies&quot;</bucket>
            </map>
            <map to='#d6ca60'>
              <bucket>&quot;Blend&quot;</bucket>
            </map>
            <map to='#d6ca60'>
              <bucket>&quot;Blockchain.com&quot;</bucket>
            </map>
            <map to='#d7ca60'>
              <bucket>&quot;Black Shark&quot;</bucket>
            </map>
            <map to='#d8ca60'>
              <bucket>&quot;Bittrex&quot;</bucket>
            </map>
            <map to='#d9ca60'>
              <bucket>&quot;BitTorrent&quot;</bucket>
            </map>
            <map to='#dacb60'>
              <bucket>&quot;BitSight&quot;</bucket>
            </map>
            <map to='#dacb61'>
              <bucket>&quot;BharatAgri&quot;</bucket>
            </map>
            <map to='#dbcb61'>
              <bucket>&quot;Betterment&quot;</bucket>
            </map>
            <map to='#dccb61'>
              <bucket>&quot;Betterfly&quot;</bucket>
            </map>
            <map to='#ddcb61'>
              <bucket>&quot;Benevity&quot;</bucket>
            </map>
            <map to='#ddcc61'>
              <bucket>&quot;Beamery&quot;</bucket>
            </map>
            <map to='#decc61'>
              <bucket>&quot;Beam Benefits&quot;</bucket>
            </map>
            <map to='#dfcc62'>
              <bucket>&quot;Bark&quot;</bucket>
            </map>
            <map to='#e0cc62'>
              <bucket>&quot;Baraja&quot;</bucket>
            </map>
            <map to='#e1cc62'>
              <bucket>&quot;Autodesk&quot;</bucket>
            </map>
            <map to='#e1cc62'>
              <bucket>&quot;Bally&apos;s Interactive&quot;</bucket>
            </map>
            <map to='#e2cd62'>
              <bucket>&quot;Augury&quot;</bucket>
            </map>
            <map to='#e3cd62'>
              <bucket>&quot;AU10TIX&quot;</bucket>
            </map>
            <map to='#e4cd62'>
              <bucket>&quot;Attentive&quot;</bucket>
            </map>
            <map to='#e5cd63'>
              <bucket>&quot;Astronomer&quot;</bucket>
            </map>
            <map to='#e5cd63'>
              <bucket>&quot;Atlassian&quot;</bucket>
            </map>
            <map to='#e6cd63'>
              <bucket>&quot;Articulate&quot;</bucket>
            </map>
            <map to='#e7ce63'>
              <bucket>&quot;Arrival&quot;</bucket>
            </map>
            <map to='#e8ce63'>
              <bucket>&quot;Appgate&quot;</bucket>
            </map>
            <map to='#e8ce63'>
              <bucket>&quot;Arch Oncology&quot;</bucket>
            </map>
            <map to='#e9ce64'>
              <bucket>&quot;Amount&quot;</bucket>
            </map>
            <map to='#eace64'>
              <bucket>&quot;American Robotics&quot;</bucket>
            </map>
            <map to='#ebcf64'>
              <bucket>&quot;Amdocs&quot;</bucket>
            </map>
            <map to='#eccf64'>
              <bucket>&quot;Amazon&quot;</bucket>
            </map>
            <map to='#eccf64'>
              <bucket>&quot;Ambev Tech&quot;</bucket>
            </map>
            <map to='#edcf64'>
              <bucket>&quot;Alerzo&quot;</bucket>
            </map>
            <map to='#eecf64'>
              <bucket>&quot;Akili Labs&quot;</bucket>
            </map>
            <map to='#efcf65'>
              <bucket>&quot;Aiven&quot;</bucket>
            </map>
            <map to='#f0d065'>
              <bucket>&quot;Affirm&quot;</bucket>
            </map>
            <map to='#f0d065'>
              <bucket>&quot;Airbnb&quot;</bucket>
            </map>
            <map to='#f1d065'>
              <bucket>&quot;Addepar&quot;</bucket>
            </map>
            <map to='#f2d065'>
              <bucket>&quot;\#Paid&quot;</bucket>
            </map>
            <map to='#f3d065'>
              <bucket>&quot;80 Acres Farms&quot;</bucket>
            </map>
            <map to='#f4d166'>
              <bucket>&quot;8x8&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[yr:date:ok]' palette='purple_10_0' type='palette'>
            <map to='#4e79a7'>
              <bucket>%null%</bucket>
            </map>
            <map to='#7c4d79'>
              <bucket>2023</bucket>
            </map>
            <map to='#a5729b'>
              <bucket>2022</bucket>
            </map>
            <map to='#cd9bbc'>
              <bucket>2021</bucket>
            </map>
            <map to='#eec9e5'>
              <bucket>2020</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='layoff analysis.csv' id='layoff analysis.csv_B87C25D384924E9BA3E49CDAE0ADD3B3'>
            <properties context=''>
              <relation connection='textscan.1v7u6ij1fak4yh1b2q5sv0vp9uws' name='layoff analysis.csv' table='[layoff analysis#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                  <column datatype='string' name='company' ordinal='0' />
                  <column datatype='string' name='location' ordinal='1' />
                  <column datatype='string' name='industry' ordinal='2' />
                  <column datatype='integer' name='total_laid_off' ordinal='3' />
                  <column datatype='real' name='percentage_laid_off' ordinal='4' />
                  <column datatype='date' name='date' ordinal='5' />
                  <column datatype='string' name='stage' ordinal='6' />
                  <column datatype='string' name='country' ordinal='7' />
                  <column datatype='integer' name='funds_raised_millions' ordinal='8' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='Extract' table='[Extract].[Extract]' type='table' />
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <shared-views>
    <shared-view name='federated.1bljdu50nsme671f712ck0dpzk0v'>
      <datasources>
        <datasource caption='layoff analysis' name='federated.1bljdu50nsme671f712ck0dpzk0v' />
      </datasources>
      <datasource-dependencies datasource='federated.1bljdu50nsme671f712ck0dpzk0v'>
        <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
        <column-instance column='[date]' derivation='Year' name='[yr:date:ok]' pivot='key' type='ordinal' />
      </datasource-dependencies>
      <filter class='categorical' column='[federated.1bljdu50nsme671f712ck0dpzk0v].[yr:date:ok]'>
        <groupfilter function='level-members' level='[yr:date:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
      </filter>
    </shared-view>
  </shared-views>
  <actions>
    <action caption='Filter1' name='[Action1_4AADA82F93D946DF8EA6C494D90C12DA]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Laid Off Analysis Dashboard' type='sheet'>
        <exclude-sheet name='Industry Percentage Of Laid Off Worker&apos;s ' />
        <exclude-sheet name='Years with the Largest Laid Off&apos;s' />
      </source>
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Laid Off Analysis Dashboard' />
      </command>
    </action>
  </actions>
  <worksheets>
    <worksheet name='Industry Percentage Of Laid Off Worker&apos;s '>
      <table>
        <view>
          <datasources>
            <datasource caption='layoff analysis' name='federated.1bljdu50nsme671f712ck0dpzk0v' />
          </datasources>
          <datasource-dependencies datasource='federated.1bljdu50nsme671f712ck0dpzk0v'>
            <column caption='Company' datatype='string' name='[company]' role='dimension' type='nominal' />
            <column caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column caption='Industry' datatype='string' name='[industry]' role='dimension' type='nominal' />
            <column caption='Location' datatype='string' name='[location]' role='dimension' type='nominal' />
            <column-instance column='[industry]' derivation='None' name='[none:industry:nk]' pivot='key' type='nominal' />
            <column caption='Percentage Laid Off' datatype='real' name='[percentage_laid_off]' role='measure' type='quantitative' />
            <column-instance column='[percentage_laid_off]' derivation='Sum' name='[sum:percentage_laid_off:qk]' pivot='key' type='quantitative' />
            <column-instance column='[date]' derivation='Year' name='[yr:date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1bljdu50nsme671f712ck0dpzk0v].[Action (Company)]'>
            <groupfilter function='level-members' level='[company]' user:ui-action-filter='[Action1_4AADA82F93D946DF8EA6C494D90C12DA]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1bljdu50nsme671f712ck0dpzk0v].[Action (Country,Location)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action1_4AADA82F93D946DF8EA6C494D90C12DA]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[country]' />
              <groupfilter function='level-members' level='[location]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1bljdu50nsme671f712ck0dpzk0v].[none:industry:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:industry:nk]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:industry:nk]' member='%null%' />
                <groupfilter function='member' level='[none:industry:nk]' member='&quot;Manufacturing&quot;' />
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='quantitative' column='[federated.1bljdu50nsme671f712ck0dpzk0v].[sum:percentage_laid_off:qk]' included-values='non-null' />
          <slices>
            <column>[federated.1bljdu50nsme671f712ck0dpzk0v].[none:industry:nk]</column>
            <column>[federated.1bljdu50nsme671f712ck0dpzk0v].[yr:date:ok]</column>
            <column>[federated.1bljdu50nsme671f712ck0dpzk0v].[sum:percentage_laid_off:qk]</column>
            <column>[federated.1bljdu50nsme671f712ck0dpzk0v].[Action (Company)]</column>
            <column>[federated.1bljdu50nsme671f712ck0dpzk0v].[Action (Country,Location)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='field-labels'>
            <format attr='font-size' value='12' />
            <format attr='font-weight' value='bold' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-size' field='[federated.1bljdu50nsme671f712ck0dpzk0v].[sum:percentage_laid_off:qk]' value='12' />
            <format attr='font-weight' field='[federated.1bljdu50nsme671f712ck0dpzk0v].[sum:percentage_laid_off:qk]' value='normal' />
            <format attr='text-format' field='[federated.1bljdu50nsme671f712ck0dpzk0v].[sum:percentage_laid_off:qk]' value='p0%' />
          </style-rule>
          <style-rule element='data-highlighter-title'>
            <format attr='title' field='[federated.1bljdu50nsme671f712ck0dpzk0v].[none:industry:nk]' value='Highlight Industry'>
              <formatted-text>
                <run>Highlight Industry</run>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
                <format attr='size' value='1.5602209568023682' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1bljdu50nsme671f712ck0dpzk0v].[none:industry:nk]</rows>
        <cols>[federated.1bljdu50nsme671f712ck0dpzk0v].[sum:percentage_laid_off:qk]</cols>
      </table>
      <simple-id uuid='{AFC48E55-61F5-4CBD-B171-81C9E007FE70}' />
    </worksheet>
    <worksheet name='Map Of The World'>
      <layout-options>
        <title>
          <formatted-text>
            <run>World Map Of Laid Off Worker&apos;s</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='layoff analysis' name='federated.1bljdu50nsme671f712ck0dpzk0v' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1bljdu50nsme671f712ck0dpzk0v'>
            <column caption='Company' datatype='string' name='[company]' role='dimension' type='nominal' />
            <column caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column caption='Funds Raised Millions' datatype='integer' name='[funds_raised_millions]' role='measure' type='quantitative' />
            <column caption='Location' datatype='string' name='[location]' role='dimension' type='nominal' />
            <column-instance column='[country]' derivation='None' name='[none:country:nk]' pivot='key' type='nominal' />
            <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
            <column-instance column='[funds_raised_millions]' derivation='Sum' name='[sum:funds_raised_millions:qk]' pivot='key' type='quantitative' />
            <column-instance column='[total_laid_off]' derivation='Sum' name='[sum:total_laid_off:qk]' pivot='key' type='quantitative' />
            <column caption='Total Laid Off' datatype='integer' name='[total_laid_off]' role='measure' type='quantitative' />
            <column-instance column='[date]' derivation='Year' name='[yr:date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1bljdu50nsme671f712ck0dpzk0v].[Action (Company)]'>
            <groupfilter function='level-members' level='[company]' user:ui-action-filter='[Action1_4AADA82F93D946DF8EA6C494D90C12DA]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1bljdu50nsme671f712ck0dpzk0v].[yr:date:ok]</column>
            <column>[federated.1bljdu50nsme671f712ck0dpzk0v].[Action (Company)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1bljdu50nsme671f712ck0dpzk0v].[Longitude (generated)]' field-type='quantitative' max='35528701.531931639' min='-34134562.747871369' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.1bljdu50nsme671f712ck0dpzk0v].[Latitude (generated)]' field-type='quantitative' max='24219618.912364088' min='-10851133.237874355' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1bljdu50nsme671f712ck0dpzk0v].[sum:funds_raised_millions:qk]' min='0' palette='red_green_diverging_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1bljdu50nsme671f712ck0dpzk0v].[sum:funds_raised_millions:qk]' />
              <size column='[federated.1bljdu50nsme671f712ck0dpzk0v].[sum:total_laid_off:qk]' />
              <lod column='[federated.1bljdu50nsme671f712ck0dpzk0v].[none:country:nk]' />
              <lod column='[federated.1bljdu50nsme671f712ck0dpzk0v].[none:location:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='2' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='1311' />
                <format attr='maxwidth' value='1311' />
                <format attr='minheight' value='660' />
                <format attr='maxheight' value='660' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1bljdu50nsme671f712ck0dpzk0v].[Latitude (generated)]</rows>
        <cols>[federated.1bljdu50nsme671f712ck0dpzk0v].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{138F5FE2-ABDB-4533-996B-94661FE3665A}' />
    </worksheet>
    <worksheet name='Top 20 Companies With The Largest Laid Off&apos;s'>
      <table>
        <view>
          <datasources>
            <datasource caption='layoff analysis' name='federated.1bljdu50nsme671f712ck0dpzk0v' />
          </datasources>
          <datasource-dependencies datasource='federated.1bljdu50nsme671f712ck0dpzk0v'>
            <column caption='Company' datatype='string' name='[company]' role='dimension' type='nominal' />
            <column caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column caption='Location' datatype='string' name='[location]' role='dimension' type='nominal' />
            <column-instance column='[company]' derivation='None' name='[none:company:nk]' pivot='key' type='nominal' />
            <column-instance column='[total_laid_off]' derivation='Sum' name='[sum:total_laid_off:qk]' pivot='key' type='quantitative' />
            <column caption='Total Laid Off' datatype='integer' name='[total_laid_off]' role='measure' type='quantitative' />
            <column-instance column='[date]' derivation='Year' name='[yr:date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1bljdu50nsme671f712ck0dpzk0v].[Action (Country,Location)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action1_4AADA82F93D946DF8EA6C494D90C12DA]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[country]' />
              <groupfilter function='level-members' level='[location]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1bljdu50nsme671f712ck0dpzk0v].[none:company:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:company:nk]' member='&quot;\#Paid&quot;' />
              <groupfilter function='member' level='[none:company:nk]' member='&quot;80 Acres Farms&quot;' />
              <groupfilter function='member' level='[none:company:nk]' member='&quot;8x8&quot;' />
              <groupfilter function='member' level='[none:company:nk]' member='&quot;Addepar&quot;' />
              <groupfilter function='member' level='[none:company:nk]' member='&quot;Affirm&quot;' />
              <groupfilter function='member' level='[none:company:nk]' member='&quot;Airbnb&quot;' />
              <groupfilter function='member' level='[none:company:nk]' member='&quot;Aiven&quot;' />
              <groupfilter function='member' level='[none:company:nk]' member='&quot;Akili Labs&quot;' />
              <groupfilter function='member' level='[none:company:nk]' member='&quot;Alerzo&quot;' />
              <groupfilter function='member' level='[none:company:nk]' member='&quot;Amazon&quot;' />
              <groupfilter function='member' level='[none:company:nk]' member='&quot;Ambev Tech&quot;' />
              <groupfilter function='member' level='[none:company:nk]' member='&quot;Amdocs&quot;' />
              <groupfilter function='member' level='[none:company:nk]' member='&quot;American Robotics&quot;' />
              <groupfilter function='member' level='[none:company:nk]' member='&quot;Amount&quot;' />
              <groupfilter function='member' level='[none:company:nk]' member='&quot;Appgate&quot;' />
              <groupfilter function='member' level='[none:company:nk]' member='&quot;Arch Oncology&quot;' />
              <groupfilter function='member' level='[none:company:nk]' member='&quot;Arrival&quot;' />
              <groupfilter function='member' level='[none:company:nk]' member='&quot;Articulate&quot;' />
              <groupfilter function='member' level='[none:company:nk]' member='&quot;Astronomer&quot;' />
              <groupfilter function='member' level='[none:company:nk]' member='&quot;Atlassian&quot;' />
              <groupfilter function='member' level='[none:company:nk]' member='&quot;Attentive&quot;' />
              <groupfilter function='member' level='[none:company:nk]' member='&quot;AU10TIX&quot;' />
              <groupfilter function='member' level='[none:company:nk]' member='&quot;Augury&quot;' />
              <groupfilter function='member' level='[none:company:nk]' member='&quot;Autodesk&quot;' />
              <groupfilter function='member' level='[none:company:nk]' member='&quot;Bally&apos;s Interactive&quot;' />
              <groupfilter function='member' level='[none:company:nk]' member='&quot;Baraja&quot;' />
              <groupfilter function='member' level='[none:company:nk]' member='&quot;Bark&quot;' />
              <groupfilter function='member' level='[none:company:nk]' member='&quot;Beam Benefits&quot;' />
              <groupfilter function='member' level='[none:company:nk]' member='&quot;Beamery&quot;' />
              <groupfilter function='member' level='[none:company:nk]' member='&quot;Benevity&quot;' />
              <groupfilter function='member' level='[none:company:nk]' member='&quot;Betterfly&quot;' />
              <groupfilter function='member' level='[none:company:nk]' member='&quot;Betterment&quot;' />
              <groupfilter function='member' level='[none:company:nk]' member='&quot;BharatAgri&quot;' />
              <groupfilter function='member' level='[none:company:nk]' member='&quot;BitSight&quot;' />
              <groupfilter function='member' level='[none:company:nk]' member='&quot;BitTorrent&quot;' />
              <groupfilter function='member' level='[none:company:nk]' member='&quot;Bittrex&quot;' />
              <groupfilter function='member' level='[none:company:nk]' member='&quot;Black Shark&quot;' />
              <groupfilter function='member' level='[none:company:nk]' member='&quot;Blend&quot;' />
              <groupfilter function='member' level='[none:company:nk]' member='&quot;Blockchain.com&quot;' />
              <groupfilter function='member' level='[none:company:nk]' member='&quot;BM Technologies&quot;' />
              <groupfilter function='member' level='[none:company:nk]' member='&quot;Bolt&quot;' />
              <groupfilter function='member' level='[none:company:nk]' member='&quot;Bonterra&quot;' />
              <groupfilter function='member' level='[none:company:nk]' member='&quot;Booktopia&quot;' />
              <groupfilter function='member' level='[none:company:nk]' member='&quot;Bounce&quot;' />
              <groupfilter function='member' level='[none:company:nk]' member='&quot;Britishvolt&quot;' />
              <groupfilter function='member' level='[none:company:nk]' member='&quot;Bustle Digital Group&quot;' />
              <groupfilter function='member' level='[none:company:nk]' member='&quot;Butterfly Network&quot;' />
              <groupfilter function='member' level='[none:company:nk]' member='&quot;Byju&apos;s&quot;' />
              <groupfilter function='member' level='[none:company:nk]' member='&quot;ByteDance&quot;' />
              <groupfilter function='member' level='[none:company:nk]' member='&quot;Camp K12&quot;' />
              <groupfilter function='member' level='[none:company:nk]' member='&quot;Capital One&quot;' />
              <groupfilter function='member' level='[none:company:nk]' member='&quot;Captain Fresh&quot;' />
              <groupfilter function='member' level='[none:company:nk]' member='&quot;Carbon Health&quot;' />
              <groupfilter function='member' level='[none:company:nk]' member='&quot;Career Karma&quot;' />
              <groupfilter function='member' level='[none:company:nk]' member='&quot;Carta&quot;' />
              <groupfilter function='member' level='[none:company:nk]' member='&quot;Casavo&quot;' />
              <groupfilter function='member' level='[none:company:nk]' member='&quot;Cashfree Payments&quot;' />
              <groupfilter function='member' level='[none:company:nk]' member='&quot;Catch.com.au&quot;' />
              <groupfilter function='member' level='[none:company:nk]' member='&quot;Cerebral&quot;' />
              <groupfilter function='member' level='[none:company:nk]' member='&quot;Chainalysis&quot;' />
              <groupfilter function='member' level='[none:company:nk]' member='&quot;Chipper Cash&quot;' />
              <groupfilter function='member' level='[none:company:nk]' member='&quot;Chrono24&quot;' />
              <groupfilter function='member' level='[none:company:nk]' member='&quot;Citizen&quot;' />
              <groupfilter function='member' level='[none:company:nk]' member='&quot;Citrine Informatics&quot;' />
              <groupfilter function='member' level='[none:company:nk]' member='&quot;Citrix&quot;' />
              <groupfilter function='member' level='[none:company:nk]' member='&quot;Clari&quot;' />
              <groupfilter function='member' level='[none:company:nk]' member='&quot;Clear Capital&quot;' />
              <groupfilter function='member' level='[none:company:nk]' member='&quot;ClearCo&quot;' />
              <groupfilter function='member' level='[none:company:nk]' member='&quot;Clue&quot;' />
              <groupfilter function='member' level='[none:company:nk]' member='&quot;Clutch&quot;' />
              <groupfilter function='member' level='[none:company:nk]' member='&quot;CNET&quot;' />
              <groupfilter function='member' level='[none:company:nk]' member='&quot;CoachHub&quot;' />
              <groupfilter function='member' level='[none:company:nk]' member='&quot;Coinbase&quot;' />
              <groupfilter function='member' level='[none:company:nk]' member='&quot;CoinDCX&quot;' />
              <groupfilter function='member' level='[none:company:nk]' member='&quot;CoinTracker&quot;' />
              <groupfilter function='member' level='[none:company:nk]' member='&quot;Collective Health&quot;' />
              <groupfilter function='member' level='[none:company:nk]' member='&quot;Color Health&quot;' />
              <groupfilter function='member' level='[none:company:nk]' member='&quot;CommerceHub&quot;' />
              <groupfilter function='member' level='[none:company:nk]' member='&quot;Confluent&quot;' />
              <groupfilter function='member' level='[none:company:nk]' member='&quot;ConsenSys&quot;' />
              <groupfilter function='member' level='[none:company:nk]' member='&quot;Corvus Insurance&quot;' />
              <groupfilter function='member' level='[none:company:nk]' member='&quot;Crunchyroll&quot;' />
              <groupfilter function='member' level='[none:company:nk]' member='&quot;Crypto.com&quot;' />
              <groupfilter function='member' level='[none:company:nk]' member='&quot;CS Disco&quot;' />
              <groupfilter function='member' level='[none:company:nk]' member='&quot;Cue&quot;' />
              <groupfilter function='member' level='[none:company:nk]' member='&quot;Cyren&quot;' />
              <groupfilter function='member' level='[none:company:nk]' member='&quot;Cyteir Therapeutics&quot;' />
              <groupfilter function='member' level='[none:company:nk]' member='&quot;Dapper Labs&quot;' />
              <groupfilter function='member' level='[none:company:nk]' member='&quot;Daraz&quot;' />
              <groupfilter function='member' level='[none:company:nk]' member='&quot;DealShare&quot;' />
              <groupfilter function='member' level='[none:company:nk]' member='&quot;Definitive Healthcare&quot;' />
              <groupfilter function='member' level='[none:company:nk]' member='&quot;DeHaat&quot;' />
              <groupfilter function='member' level='[none:company:nk]' member='&quot;Deliveroo&quot;' />
              <groupfilter function='member' level='[none:company:nk]' member='&quot;Delivery Hero&quot;' />
              <groupfilter function='member' level='[none:company:nk]' member='&quot;Dell&quot;' />
              <groupfilter function='member' level='[none:company:nk]' member='&quot;DigitalOcean&quot;' />
              <groupfilter function='member' level='[none:company:nk]' member='&quot;DocuSign&quot;' />
              <groupfilter function='member' level='[none:company:nk]' member='&quot;DraftKings&quot;' />
              <groupfilter function='member' level='[none:company:nk]' member='&quot;Drift&quot;' />
              <groupfilter function='member' level='[none:company:nk]' member='&quot;DriveWealth&quot;' />
              <groupfilter function='member' level='[none:company:nk]' member='&quot;Dunzo&quot;' />
              <groupfilter function='member' level='[none:company:nk]' member='&quot;DUX Education&quot;' />
              <groupfilter function='member' level='[none:company:nk]' member='&quot;Earth Rides&quot;' />
              <groupfilter function='member' level='[none:company:nk]' member='&quot;Eat Just&quot;' />
              <groupfilter function='member' level='[none:company:nk]' member='&quot;eBay&quot;' />
              <groupfilter function='member' level='[none:company:nk]' member='&quot;Edifecs&quot;' />
              <groupfilter function='member' level='[none:company:nk]' member='&quot;Editas Medicine&quot;' />
              <groupfilter function='member' level='[none:company:nk]' member='&quot;Electric&quot;' />
              <groupfilter function='member' level='[none:company:nk]' member='&quot;Electronic Arts&quot;' />
              <groupfilter function='member' level='[none:company:nk]' member='&quot;Embark&quot;' />
              <groupfilter function='member' level='[none:company:nk]' member='&quot;Embark Trucks&quot;' />
              <groupfilter function='member' level='[none:company:nk]' member='&quot;EMX Digital&quot;' />
              <groupfilter function='member' level='[none:company:nk]' member='&quot;Enjoei&quot;' />
              <groupfilter function='member' level='[none:company:nk]' member='&quot;Equitybee&quot;' />
              <groupfilter function='member' level='[none:company:nk]' member='&quot;Ericsson&quot;' />
              <groupfilter function='member' level='[none:company:nk]' member='&quot;Ermetic&quot;' />
              <groupfilter function='member' level='[none:company:nk]' member='&quot;Esper&quot;' />
              <groupfilter function='member' level='[none:company:nk]' member='&quot;Ethos Life&quot;' />
              <groupfilter function='member' level='[none:company:nk]' member='&quot;Eventbrite&quot;' />
              <groupfilter function='member' level='[none:company:nk]' member='&quot;Everlane&quot;' />
              <groupfilter function='member' level='[none:company:nk]' member='&quot;Evernote&quot;' />
              <groupfilter function='member' level='[none:company:nk]' member='&quot;EVgo&quot;' />
              <groupfilter function='member' level='[none:company:nk]' member='&quot;Exotel&quot;' />
              <groupfilter function='member' level='[none:company:nk]' member='&quot;Exterro&quot;' />
              <groupfilter function='member' level='[none:company:nk]' member='&quot;FarEye&quot;' />
              <groupfilter function='member' level='[none:company:nk]' member='&quot;Fate Therapeutics&quot;' />
              <groupfilter function='member' level='[none:company:nk]' member='&quot;Finder&quot;' />
              <groupfilter function='member' level='[none:company:nk]' member='&quot;Fipola&quot;' />
              <groupfilter function='member' level='[none:company:nk]' member='&quot;Fireblocks&quot;' />
              <groupfilter function='member' level='[none:company:nk]' member='&quot;Fittr&quot;' />
              <groupfilter function='member' level='[none:company:nk]' member='&quot;Flexport&quot;' />
              <groupfilter function='member' level='[none:company:nk]' member='&quot;ForeScout&quot;' />
              <groupfilter function='member' level='[none:company:nk]' member='&quot;Frequency Therapeutics&quot;' />
              <groupfilter function='member' level='[none:company:nk]' member='&quot;Gemini&quot;' />
              <groupfilter function='member' level='[none:company:nk]' member='&quot;Genesis&quot;' />
              <groupfilter function='member' level='[none:company:nk]' member='&quot;Getaround&quot;' />
              <groupfilter function='member' level='[none:company:nk]' member='&quot;Getir&quot;' />
              <groupfilter function='member' level='[none:company:nk]' member='&quot;GitHub&quot;' />
              <groupfilter function='member' level='[none:company:nk]' member='&quot;GitLab&quot;' />
              <groupfilter function='member' level='[none:company:nk]' member='&quot;Gitpod&quot;' />
              <groupfilter function='member' level='[none:company:nk]' member='&quot;Glovo&quot;' />
              <groupfilter function='member' level='[none:company:nk]' member='&quot;GoBolt&quot;' />
              <groupfilter function='member' level='[none:company:nk]' member='&quot;GoDaddy&quot;' />
              <groupfilter function='member' level='[none:company:nk]' member='&quot;Gokada&quot;' />
              <groupfilter function='member' level='[none:company:nk]' member='&quot;GoMechanic&quot;' />
              <groupfilter function='member' level='[none:company:nk]' member='&quot;Gong&quot;' />
              <groupfilter function='member' level='[none:company:nk]' member='&quot;Google&quot;' />
              <groupfilter function='member' level='[none:company:nk]' member='&quot;Gramophone&quot;' />
              <groupfilter function='member' level='[none:company:nk]' member='&quot;Greenlight&quot;' />
              <groupfilter function='member' level='[none:company:nk]' member='&quot;Groupon&quot;' />
              <groupfilter function='member' level='[none:company:nk]' member='&quot;Guardant Health&quot;' />
              <groupfilter function='member' level='[none:company:nk]' member='&quot;Gusto&quot;' />
              <groupfilter function='member' level='[none:company:nk]' member='&quot;HackerEarth&quot;' />
              <groupfilter function='member' level='[none:company:nk]' member='&quot;Harappa&quot;' />
              <groupfilter function='member' level='[none:company:nk]' member='&quot;HashiCorp&quot;' />
              <groupfilter function='member' level='[none:company:nk]' member='&quot;Heycar&quot;' />
              <groupfilter function='member' level='[none:company:nk]' member='&quot;Highspot&quot;' />
              <groupfilter function='member' level='[none:company:nk]' member='&quot;Hootsuite&quot;' />
              <groupfilter function='member' level='[none:company:nk]' member='&quot;HP&quot;' />
              <groupfilter function='member' level='[none:company:nk]' member='&quot;Hubilo&quot;' />
              <groupfilter function='member' level='[none:company:nk]' member='&quot;HubSpot&quot;' />
              <groupfilter function='member' level='[none:company:nk]' member='&quot;Huobi&quot;' />
              <groupfilter function='member' level='[none:company:nk]' member='&quot;Hydrow&quot;' />
              <groupfilter function='member' level='[none:company:nk]' member='&quot;IBM&quot;' />
              <groupfilter function='member' level='[none:company:nk]' member='&quot;iFood&quot;' />
              <groupfilter function='member' level='[none:company:nk]' member='&quot;Ignition&quot;' />
              <groupfilter function='member' level='[none:company:nk]' member='&quot;Immutable&quot;' />
              <groupfilter function='member' level='[none:company:nk]' member='&quot;Impossible Foods copy&quot;' />
              <groupfilter function='member' level='[none:company:nk]' member='&quot;Informatica&quot;' />
              <groupfilter function='member' level='[none:company:nk]' member='&quot;Inmobi&quot;' />
              <groupfilter function='member' level='[none:company:nk]' member='&quot;Innovaccer&quot;' />
              <groupfilter function='member' level='[none:company:nk]' member='&quot;Innovid&quot;' />
              <groupfilter function='member' level='[none:company:nk]' member='&quot;Inspirato&quot;' />
              <groupfilter function='member' level='[none:company:nk]' member='&quot;Intel&quot;' />
              <groupfilter function='member' level='[none:company:nk]' member='&quot;Intrinsic&quot;' />
              <groupfilter function='member' level='[none:company:nk]' member='&quot;iRobot&quot;' />
              <groupfilter function='member' level='[none:company:nk]' member='&quot;Jellyfish&quot;' />
              <groupfilter function='member' level='[none:company:nk]' member='&quot;Jellysmack&quot;' />
              <groupfilter function='member' level='[none:company:nk]' member='&quot;Jounce Therapeutics&quot;' />
              <groupfilter function='member' level='[none:company:nk]' member='&quot;Jumio&quot;' />
              <groupfilter function='member' level='[none:company:nk]' member='&quot;Jumpcloud&quot;' />
              <groupfilter function='member' level='[none:company:nk]' member='&quot;Kaltura&quot;' />
              <groupfilter function='member' level='[none:company:nk]' member='&quot;Kandela&quot;' />
              <groupfilter function='member' level='[none:company:nk]' member='&quot;Karat&quot;' />
              <groupfilter function='member' level='[none:company:nk]' member='&quot;Kinde&quot;' />
              <groupfilter function='member' level='[none:company:nk]' member='&quot;Koho&quot;' />
              <groupfilter function='member' level='[none:company:nk]' member='&quot;Kyruus&quot;' />
              <groupfilter function='member' level='[none:company:nk]' member='&quot;Lam Research&quot;' />
              <groupfilter function='member' level='[none:company:nk]' member='&quot;Lantern&quot;' />
              <groupfilter function='member' level='[none:company:nk]' member='&quot;Lattice&quot;' />
              <groupfilter function='member' level='[none:company:nk]' member='&quot;LEAD&quot;' />
              <groupfilter function='member' level='[none:company:nk]' member='&quot;LearnUpon&quot;' />
              <groupfilter function='member' level='[none:company:nk]' member='&quot;Lendi&quot;' />
              <groupfilter function='member' level='[none:company:nk]' member='&quot;Lending Club&quot;' />
              <groupfilter function='member' level='[none:company:nk]' member='&quot;Life360&quot;' />
              <groupfilter function='member' level='[none:company:nk]' member='&quot;Lightico&quot;' />
              <groupfilter function='member' level='[none:company:nk]' member='&quot;Lightspeed Commerce&quot;' />
              <groupfilter function='member' level='[none:company:nk]' member='&quot;Limeade&quot;' />
              <groupfilter function='member' level='[none:company:nk]' member='&quot;LiveVox&quot;' />
              <groupfilter function='member' level='[none:company:nk]' member='&quot;Locomation&quot;' />
              <groupfilter function='member' level='[none:company:nk]' member='&quot;Loft&quot;' />
              <groupfilter function='member' level='[none:company:nk]' member='&quot;Loggi&quot;' />
              <groupfilter function='member' level='[none:company:nk]' member='&quot;Lucid Diagnostics&quot;' />
              <groupfilter function='member' level='[none:company:nk]' member='&quot;Lucira Health&quot;' />
              <groupfilter function='member' level='[none:company:nk]' member='&quot;Luno&quot;' />
              <groupfilter function='member' level='[none:company:nk]' member='&quot;Luxury Presence&quot;' />
              <groupfilter function='member' level='[none:company:nk]' member='&quot;Magic Eden&quot;' />
              <groupfilter function='member' level='[none:company:nk]' member='&quot;Magnite&quot;' />
              <groupfilter function='member' level='[none:company:nk]' member='&quot;Mapbox&quot;' />
              <groupfilter function='member' level='[none:company:nk]' member='&quot;MariaDB&quot;' />
              <groupfilter function='member' level='[none:company:nk]' member='&quot;MasterClass&quot;' />
              <groupfilter function='member' level='[none:company:nk]' member='&quot;Match Group&quot;' />
              <groupfilter function='member' level='[none:company:nk]' member='&quot;Matrixport&quot;' />
              <groupfilter function='member' level='[none:company:nk]' member='&quot;Me Poupe&quot;' />
              <groupfilter function='member' level='[none:company:nk]' member='&quot;Medallia&quot;' />
              <groupfilter function='member' level='[none:company:nk]' member='&quot;MediBuddy&quot;' />
              <groupfilter function='member' level='[none:company:nk]' member='&quot;Medly&quot;' />
              <groupfilter function='member' level='[none:company:nk]' member='&quot;Merative&quot;' />
              <groupfilter function='member' level='[none:company:nk]' member='&quot;MeridianLink&quot;' />
              <groupfilter function='member' level='[none:company:nk]' member='&quot;Messari&quot;' />
              <groupfilter function='member' level='[none:company:nk]' member='&quot;Microsoft&quot;' />
              <groupfilter function='member' level='[none:company:nk]' member='&quot;Milkrun&quot;' />
              <groupfilter function='member' level='[none:company:nk]' member='&quot;Mindstrong&quot;' />
              <groupfilter function='member' level='[none:company:nk]' member='&quot;Minute Media&quot;' />
              <groupfilter function='member' level='[none:company:nk]' member='&quot;Miro&quot;' />
              <groupfilter function='member' level='[none:company:nk]' member='&quot;Misfits Market&quot;' />
              <groupfilter function='member' level='[none:company:nk]' member='&quot;Mode Global&quot;' />
              <groupfilter function='member' level='[none:company:nk]' member='&quot;Moglix&quot;' />
              <groupfilter function='member' level='[none:company:nk]' member='&quot;Mojo Vision&quot;' />
              <groupfilter function='member' level='[none:company:nk]' member='&quot;Moladin&quot;' />
              <groupfilter function='member' level='[none:company:nk]' member='&quot;Momentive&quot;' />
              <groupfilter function='member' level='[none:company:nk]' member='&quot;Mudafy&quot;' />
              <groupfilter function='member' level='[none:company:nk]' member='&quot;MyGate&quot;' />
              <groupfilter function='member' level='[none:company:nk]' member='&quot;Namogoo&quot;' />
              <groupfilter function='member' level='[none:company:nk]' member='&quot;National Instruments&quot;' />
              <groupfilter function='member' level='[none:company:nk]' member='&quot;NCC Group&quot;' />
              <groupfilter function='member' level='[none:company:nk]' member='&quot;nCino&quot;' />
              <groupfilter function='member' level='[none:company:nk]' member='&quot;NCSoft&quot;' />
              <groupfilter function='member' level='[none:company:nk]' member='&quot;Nearmap&quot;' />
              <groupfilter function='member' level='[none:company:nk]' member='&quot;Neon&quot;' />
              <groupfilter function='member' level='[none:company:nk]' member='&quot;NetApp&quot;' />
              <groupfilter function='member' level='[none:company:nk]' member='&quot;Nomad Health&quot;' />
              <groupfilter function='member' level='[none:company:nk]' member='&quot;OFFOR Health&quot;' />
              <groupfilter function='member' level='[none:company:nk]' member='&quot;Okta&quot;' />
              <groupfilter function='member' level='[none:company:nk]' member='&quot;Ola&quot;' />
              <groupfilter function='member' level='[none:company:nk]' member='&quot;Olive AI&quot;' />
              <groupfilter function='member' level='[none:company:nk]' member='&quot;OLX Group&quot;' />
              <groupfilter function='member' level='[none:company:nk]' member='&quot;OneFootball&quot;' />
              <groupfilter function='member' level='[none:company:nk]' member='&quot;Openpay&quot;' />
              <groupfilter function='member' level='[none:company:nk]' member='&quot;OpenText&quot;' />
              <groupfilter function='member' level='[none:company:nk]' member='&quot;Oportun&quot;' />
              <groupfilter function='member' level='[none:company:nk]' member='&quot;Outreach&quot;' />
              <groupfilter function='member' level='[none:company:nk]' member='&quot;Paddle&quot;' />
              <groupfilter function='member' level='[none:company:nk]' member='&quot;Pagaya&quot;' />
              <groupfilter function='member' level='[none:company:nk]' member='&quot;PagBank&quot;' />
              <groupfilter function='member' level='[none:company:nk]' member='&quot;PagerDuty&quot;' />
              <groupfilter function='member' level='[none:company:nk]' member='&quot;PagSeguro&quot;' />
              <groupfilter function='member' level='[none:company:nk]' member='&quot;Palantir&quot;' />
              <groupfilter function='member' level='[none:company:nk]' member='&quot;Parler&quot;' />
              <groupfilter function='member' level='[none:company:nk]' member='&quot;PartnerStack&quot;' />
              <groupfilter function='member' level='[none:company:nk]' member='&quot;PayFit&quot;' />
              <groupfilter function='member' level='[none:company:nk]' member='&quot;PayPal&quot;' />
              <groupfilter function='member' level='[none:company:nk]' member='&quot;Pecan AI&quot;' />
              <groupfilter function='member' level='[none:company:nk]' member='&quot;Pegasystems&quot;' />
              <groupfilter function='member' level='[none:company:nk]' member='&quot;Personalis&quot;' />
              <groupfilter function='member' level='[none:company:nk]' member='&quot;Personetics&quot;' />
              <groupfilter function='member' level='[none:company:nk]' member='&quot;PetLove&quot;' />
              <groupfilter function='member' level='[none:company:nk]' member='&quot;PhableCare&quot;' />
              <groupfilter function='member' level='[none:company:nk]' member='&quot;Philips&quot;' />
              <groupfilter function='member' level='[none:company:nk]' member='&quot;Pico Interactive&quot;' />
              <groupfilter function='member' level='[none:company:nk]' member='&quot;Pier&quot;' />
              <groupfilter function='member' level='[none:company:nk]' member='&quot;Pinterest&quot;' />
              <groupfilter function='member' level='[none:company:nk]' member='&quot;Plus One Robotics&quot;' />
              <groupfilter function='member' level='[none:company:nk]' member='&quot;Pocket Aces&quot;' />
              <groupfilter function='member' level='[none:company:nk]' member='&quot;Polygon&quot;' />
              <groupfilter function='member' level='[none:company:nk]' member='&quot;Poshmark&quot;' />
              <groupfilter function='member' level='[none:company:nk]' member='&quot;Prime Trust&quot;' />
              <groupfilter function='member' level='[none:company:nk]' member='&quot;Prisma&quot;' />
              <groupfilter function='member' level='[none:company:nk]' member='&quot;Prosus&quot;' />
              <groupfilter function='member' level='[none:company:nk]' member='&quot;Protego Trust Bank&quot;' />
              <groupfilter function='member' level='[none:company:nk]' member='&quot;Proterra&quot;' />
              <groupfilter function='member' level='[none:company:nk]' member='&quot;Protocol Labs&quot;' />
              <groupfilter function='member' level='[none:company:nk]' member='&quot;Qualtrics&quot;' />
              <groupfilter function='member' level='[none:company:nk]' member='&quot;Quantum SI&quot;' />
              <groupfilter function='member' level='[none:company:nk]' member='&quot;Rebel Foods&quot;' />
              <groupfilter function='member' level='[none:company:nk]' member='&quot;Redbubble&quot;' />
              <groupfilter function='member' level='[none:company:nk]' member='&quot;REE Automotive&quot;' />
              <groupfilter function='member' level='[none:company:nk]' member='&quot;Relevel&quot;' />
              <groupfilter function='member' level='[none:company:nk]' member='&quot;Rigetti Computing&quot;' />
              <groupfilter function='member' level='[none:company:nk]' member='&quot;RingCentral&quot;' />
              <groupfilter function='member' level='[none:company:nk]' member='&quot;Riot Games&quot;' />
              <groupfilter function='member' level='[none:company:nk]' member='&quot;Rivian&quot;' />
              <groupfilter function='member' level='[none:company:nk]' member='&quot;Rock Content&quot;' />
              <groupfilter function='member' level='[none:company:nk]' member='&quot;Ruggable&quot;' />
              <groupfilter function='member' level='[none:company:nk]' member='&quot;Saks.com&quot;' />
              <groupfilter function='member' level='[none:company:nk]' member='&quot;Salesforce&quot;' />
              <groupfilter function='member' level='[none:company:nk]' member='&quot;Salesloft&quot;' />
              <groupfilter function='member' level='[none:company:nk]' member='&quot;Sana Benefits&quot;' />
              <groupfilter function='member' level='[none:company:nk]' member='&quot;SAP&quot;' />
              <groupfilter function='member' level='[none:company:nk]' member='&quot;SAP Labs&quot;' />
              <groupfilter function='member' level='[none:company:nk]' member='&quot;Scale AI&quot;' />
              <groupfilter function='member' level='[none:company:nk]' member='&quot;Scoro&quot;' />
              <groupfilter function='member' level='[none:company:nk]' member='&quot;SecureWorks&quot;' />
              <groupfilter function='member' level='[none:company:nk]' member='&quot;ServiceTitan&quot;' />
              <groupfilter function='member' level='[none:company:nk]' member='&quot;Shakepay&quot;' />
              <groupfilter function='member' level='[none:company:nk]' member='&quot;ShareChat&quot;' />
              <groupfilter function='member' level='[none:company:nk]' member='&quot;Shutterfly&quot;' />
              <groupfilter function='member' level='[none:company:nk]' member='&quot;SirionLabs&quot;' />
              <groupfilter function='member' level='[none:company:nk]' member='&quot;SiriusXM&quot;' />
              <groupfilter function='member' level='[none:company:nk]' member='&quot;Skit.ai&quot;' />
              <groupfilter function='member' level='[none:company:nk]' member='&quot;SmartNews&quot;' />
              <groupfilter function='member' level='[none:company:nk]' member='&quot;Smartsheet&quot;' />
              <groupfilter function='member' level='[none:company:nk]' member='&quot;Snappy&quot;' />
              <groupfilter function='member' level='[none:company:nk]' member='&quot;Snowplow&quot;' />
              <groupfilter function='member' level='[none:company:nk]' member='&quot;Socure&quot;' />
              <groupfilter function='member' level='[none:company:nk]' member='&quot;Software AG&quot;' />
              <groupfilter function='member' level='[none:company:nk]' member='&quot;Sonder&quot;' />
              <groupfilter function='member' level='[none:company:nk]' member='&quot;Sono Motors&quot;' />
              <groupfilter function='member' level='[none:company:nk]' member='&quot;Sophos&quot;' />
              <groupfilter function='member' level='[none:company:nk]' member='&quot;SoundHound&quot;' />
              <groupfilter function='member' level='[none:company:nk]' member='&quot;Splunk&quot;' />
              <groupfilter function='member' level='[none:company:nk]' member='&quot;Spotify&quot;' />
              <groupfilter function='member' level='[none:company:nk]' member='&quot;Sprinklr&quot;' />
              <groupfilter function='member' level='[none:company:nk]' member='&quot;SSense&quot;' />
              <groupfilter function='member' level='[none:company:nk]' member='&quot;Starry&quot;' />
              <groupfilter function='member' level='[none:company:nk]' member='&quot;Stax&quot;' />
              <groupfilter function='member' level='[none:company:nk]' member='&quot;Stitch Fix&quot;' />
              <groupfilter function='member' level='[none:company:nk]' member='&quot;StreamElements&quot;' />
              <groupfilter function='member' level='[none:company:nk]' member='&quot;StrongDM&quot;' />
              <groupfilter function='member' level='[none:company:nk]' member='&quot;Stytch&quot;' />
              <groupfilter function='member' level='[none:company:nk]' member='&quot;SuperRare&quot;' />
              <groupfilter function='member' level='[none:company:nk]' member='&quot;Swiggy&quot;' />
              <groupfilter function='member' level='[none:company:nk]' member='&quot;Synamedia&quot;' />
              <groupfilter function='member' level='[none:company:nk]' member='&quot;Synopsys&quot;' />
              <groupfilter function='member' level='[none:company:nk]' member='&quot;Tackle&quot;' />
              <groupfilter function='member' level='[none:company:nk]' member='&quot;TaskUs&quot;' />
              <groupfilter function='member' level='[none:company:nk]' member='&quot;TCR2&quot;' />
              <groupfilter function='member' level='[none:company:nk]' member='&quot;Teladoc Health&quot;' />
              <groupfilter function='member' level='[none:company:nk]' member='&quot;Tencent&quot;' />
              <groupfilter function='member' level='[none:company:nk]' member='&quot;The Iconic&quot;' />
              <groupfilter function='member' level='[none:company:nk]' member='&quot;The RealReal&quot;' />
              <groupfilter function='member' level='[none:company:nk]' member='&quot;TheSkimm&quot;' />
              <groupfilter function='member' level='[none:company:nk]' member='&quot;Thinkific&quot;' />
              <groupfilter function='member' level='[none:company:nk]' member='&quot;Thoughtworks&quot;' />
              <groupfilter function='member' level='[none:company:nk]' member='&quot;Tier Mobility&quot;' />
              <groupfilter function='member' level='[none:company:nk]' member='&quot;TikTok India&quot;' />
              <groupfilter function='member' level='[none:company:nk]' member='&quot;Till Payments&quot;' />
              <groupfilter function='member' level='[none:company:nk]' member='&quot;Tilting Point&quot;' />
              <groupfilter function='member' level='[none:company:nk]' member='&quot;Tipalti&quot;' />
              <groupfilter function='member' level='[none:company:nk]' member='&quot;TripleLift&quot;' />
              <groupfilter function='member' level='[none:company:nk]' member='&quot;Tul&quot;' />
              <groupfilter function='member' level='[none:company:nk]' member='&quot;Twilio&quot;' />
              <groupfilter function='member' level='[none:company:nk]' member='&quot;Twine Solutions&quot;' />
              <groupfilter function='member' level='[none:company:nk]' member='&quot;Twitter&quot;' />
              <groupfilter function='member' level='[none:company:nk]' member='&quot;Uber Freight&quot;' />
              <groupfilter function='member' level='[none:company:nk]' member='&quot;Udemy&quot;' />
              <groupfilter function='member' level='[none:company:nk]' member='&quot;Unico&quot;' />
              <groupfilter function='member' level='[none:company:nk]' member='&quot;Uniphore&quot;' />
              <groupfilter function='member' level='[none:company:nk]' member='&quot;Unity&quot;' />
              <groupfilter function='member' level='[none:company:nk]' member='&quot;UpGrad&quot;' />
              <groupfilter function='member' level='[none:company:nk]' member='&quot;UpScalio&quot;' />
              <groupfilter function='member' level='[none:company:nk]' member='&quot;Upstart&quot;' />
              <groupfilter function='member' level='[none:company:nk]' member='&quot;UserTesting&quot;' />
              <groupfilter function='member' level='[none:company:nk]' member='&quot;Vacasa&quot;' />
              <groupfilter function='member' level='[none:company:nk]' member='&quot;Velodyne Lidar&quot;' />
              <groupfilter function='member' level='[none:company:nk]' member='&quot;Venngage&quot;' />
              <groupfilter function='member' level='[none:company:nk]' member='&quot;Veriff&quot;' />
              <groupfilter function='member' level='[none:company:nk]' member='&quot;Verily&quot;' />
              <groupfilter function='member' level='[none:company:nk]' member='&quot;VerticalScope&quot;' />
              <groupfilter function='member' level='[none:company:nk]' member='&quot;Vial&quot;' />
              <groupfilter function='member' level='[none:company:nk]' member='&quot;Vibrent Health&quot;' />
              <groupfilter function='member' level='[none:company:nk]' member='&quot;Vicarious Surgical&quot;' />
              <groupfilter function='member' level='[none:company:nk]' member='&quot;Vimeo&quot;' />
              <groupfilter function='member' level='[none:company:nk]' member='&quot;VinFast US&quot;' />
              <groupfilter function='member' level='[none:company:nk]' member='&quot;Vox Media&quot;' />
              <groupfilter function='member' level='[none:company:nk]' member='&quot;Vroom&quot;' />
              <groupfilter function='member' level='[none:company:nk]' member='&quot;WalkMe&quot;' />
              <groupfilter function='member' level='[none:company:nk]' member='&quot;Wallbox&quot;' />
              <groupfilter function='member' level='[none:company:nk]' member='&quot;Wayfair&quot;' />
              <groupfilter function='member' level='[none:company:nk]' member='&quot;Waymo&quot;' />
              <groupfilter function='member' level='[none:company:nk]' member='&quot;Wefox&quot;' />
              <groupfilter function='member' level='[none:company:nk]' member='&quot;WeTrade&quot;' />
              <groupfilter function='member' level='[none:company:nk]' member='&quot;WeWork&quot;' />
              <groupfilter function='member' level='[none:company:nk]' member='&quot;Wheel&quot;' />
              <groupfilter function='member' level='[none:company:nk]' member='&quot;WHOOP&quot;' />
              <groupfilter function='member' level='[none:company:nk]' member='&quot;Wish&quot;' />
              <groupfilter function='member' level='[none:company:nk]' member='&quot;Wix&quot;' />
              <groupfilter function='member' level='[none:company:nk]' member='&quot;Workato&quot;' />
              <groupfilter function='member' level='[none:company:nk]' member='&quot;Workday&quot;' />
              <groupfilter function='member' level='[none:company:nk]' member='&quot;Wyre&quot;' />
              <groupfilter function='member' level='[none:company:nk]' member='&quot;Yahoo&quot;' />
              <groupfilter function='member' level='[none:company:nk]' member='&quot;Yellow.ai&quot;' />
              <groupfilter function='member' level='[none:company:nk]' member='&quot;Yext&quot;' />
              <groupfilter function='member' level='[none:company:nk]' member='&quot;Zoom&quot;' />
              <groupfilter function='member' level='[none:company:nk]' member='&quot;Zscaler&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1bljdu50nsme671f712ck0dpzk0v].[none:company:nk]</column>
            <column>[federated.1bljdu50nsme671f712ck0dpzk0v].[yr:date:ok]</column>
            <column>[federated.1bljdu50nsme671f712ck0dpzk0v].[Action (Country,Location)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='table'>
            <format attr='show-null-value-warning' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <color column='[federated.1bljdu50nsme671f712ck0dpzk0v].[none:company:nk]' />
              <size column='[federated.1bljdu50nsme671f712ck0dpzk0v].[sum:total_laid_off:qk]' />
              <text column='[federated.1bljdu50nsme671f712ck0dpzk0v].[none:company:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{1994A1DE-4A40-4C7A-AEB9-8B88ED8429D8}' />
    </worksheet>
    <worksheet name='Years with the Largest Laid Off&apos;s'>
      <table>
        <view>
          <datasources>
            <datasource caption='layoff analysis' name='federated.1bljdu50nsme671f712ck0dpzk0v' />
          </datasources>
          <datasource-dependencies datasource='federated.1bljdu50nsme671f712ck0dpzk0v'>
            <column caption='Company' datatype='string' name='[company]' role='dimension' type='nominal' />
            <column caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column caption='Location' datatype='string' name='[location]' role='dimension' type='nominal' />
            <column-instance column='[total_laid_off]' derivation='Sum' name='[sum:total_laid_off:qk]' pivot='key' type='quantitative' />
            <column caption='Total Laid Off' datatype='integer' name='[total_laid_off]' role='measure' type='quantitative' />
            <column-instance column='[date]' derivation='Year' name='[yr:date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1bljdu50nsme671f712ck0dpzk0v].[Action (Company)]'>
            <groupfilter function='level-members' level='[company]' user:ui-action-filter='[Action1_4AADA82F93D946DF8EA6C494D90C12DA]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1bljdu50nsme671f712ck0dpzk0v].[Action (Country,Location)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action1_4AADA82F93D946DF8EA6C494D90C12DA]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[country]' />
              <groupfilter function='level-members' level='[location]' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1bljdu50nsme671f712ck0dpzk0v].[yr:date:ok]</column>
            <column>[federated.1bljdu50nsme671f712ck0dpzk0v].[Action (Company)]</column>
            <column>[federated.1bljdu50nsme671f712ck0dpzk0v].[Action (Country,Location)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='width' field='[federated.1bljdu50nsme671f712ck0dpzk0v].[sum:total_laid_off:qk]' value='97' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='width' field='[federated.1bljdu50nsme671f712ck0dpzk0v].[yr:date:ok]' value='60' />
          </style-rule>
          <style-rule element='field-labels'>
            <format attr='font-size' value='12' />
            <format attr='font-weight' value='bold' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-size' field='[federated.1bljdu50nsme671f712ck0dpzk0v].[sum:total_laid_off:qk]' value='12' />
            <format attr='font-weight' field='[federated.1bljdu50nsme671f712ck0dpzk0v].[sum:total_laid_off:qk]' value='normal' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.1bljdu50nsme671f712ck0dpzk0v].[yr:date:ok]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#f28e2b' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1bljdu50nsme671f712ck0dpzk0v].[sum:total_laid_off:qk]</rows>
        <cols>[federated.1bljdu50nsme671f712ck0dpzk0v].[yr:date:ok]</cols>
      </table>
      <simple-id uuid='{24CBBFD0-F98A-4C50-9E96-64366423BA1F}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Laid Off Analysis Dashboard'>
      <style />
      <size sizing-mode='automatic' />
      <datasources>
        <datasource caption='layoff analysis' name='federated.1bljdu50nsme671f712ck0dpzk0v' />
      </datasources>
      <datasource-dependencies datasource='federated.1bljdu50nsme671f712ck0dpzk0v'>
        <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
        <column-instance column='[date]' derivation='Year' name='[yr:date:ok]' pivot='key' type='ordinal' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98002' id='7' param='horz' type-v2='layout-flow' w='99034' x='483' y='999'>
            <zone h='98002' id='5' type-v2='layout-basic' w='78515' x='483' y='999'>
              <zone h='57422' id='3' name='Map Of The World' w='45323' x='483' y='999'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='98002' id='14' name='Top 20 Companies With The Largest Laid Off&apos;s' w='33192' x='45806' y='999'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='40580' id='15' name='Industry Percentage Of Laid Off Worker&apos;s ' w='24502' x='483' y='58421'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='40580' id='16' name='Years with the Largest Laid Off&apos;s' w='20821' x='24985' y='58421'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
            <zone fixed-size='340' h='98002' id='6' is-fixed='true' param='vert' type-v2='layout-flow' w='20519' x='78998' y='999'>
              <zone h='11111' id='8' mode='slider' name='Map Of The World' param='[federated.1bljdu50nsme671f712ck0dpzk0v].[yr:date:ok]' type-v2='filter' w='20519' x='78998' y='999'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='9114' id='9' name='Map Of The World' pane-specification-id='0' param='[federated.1bljdu50nsme671f712ck0dpzk0v].[sum:funds_raised_millions:qk]' type-v2='color' w='20519' x='78998' y='12110'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='14232' id='10' name='Map Of The World' pane-specification-id='0' param='[federated.1bljdu50nsme671f712ck0dpzk0v].[sum:total_laid_off:qk]' type-v2='size' w='20519' x='78998' y='21224'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1400' minheight='1400' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='18' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98002' id='17' param='vert' type-v2='layout-flow' w='99034' x='483' y='999'>
                <zone h='11111' id='8' mode='slider' name='Map Of The World' param='[federated.1bljdu50nsme671f712ck0dpzk0v].[yr:date:ok]' type-v2='filter' w='20519' x='78998' y='999'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='57422' id='3' is-fixed='true' name='Map Of The World' w='45323' x='483' y='999'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='9114' id='9' name='Map Of The World' pane-specification-id='0' param='[federated.1bljdu50nsme671f712ck0dpzk0v].[sum:funds_raised_millions:qk]' type-v2='color' w='20519' x='78998' y='12110'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='14232' id='10' name='Map Of The World' pane-specification-id='0' param='[federated.1bljdu50nsme671f712ck0dpzk0v].[sum:total_laid_off:qk]' type-v2='size' w='20519' x='78998' y='21224'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='98002' id='14' is-fixed='true' name='Top 20 Companies With The Largest Laid Off&apos;s' w='33192' x='45806' y='999'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='40580' id='15' is-fixed='true' name='Industry Percentage Of Laid Off Worker&apos;s ' w='24502' x='483' y='58421'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='40580' id='16' is-fixed='true' name='Years with the Largest Laid Off&apos;s' w='20821' x='24985' y='58421'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{F7E24746-1FAC-4DBF-B632-15C70CD0D41F}' />
    </dashboard>
  </dashboards>
  <windows saved-dpi-scale-factor='1.25' source-height='37'>
    <window class='worksheet' name='Map Of The World'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[federated.1bljdu50nsme671f712ck0dpzk0v].[sum:funds_raised_millions:qk]' type='color' />
            <card pane-specification-id='0' param='[federated.1bljdu50nsme671f712ck0dpzk0v].[sum:total_laid_off:qk]' type='size' />
            <card mode='dropdown' param='[federated.1bljdu50nsme671f712ck0dpzk0v].[yr:date:ok]' type='filter' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1bljdu50nsme671f712ck0dpzk0v].[none:company:nk]</field>
            <field>[federated.1bljdu50nsme671f712ck0dpzk0v].[yr:date:ok]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='1' />
      </viewpoint>
      <simple-id uuid='{11132130-F854-4A25-B340-5B0C1CC2170F}' />
    </window>
    <window class='worksheet' name='Industry Percentage Of Laid Off Worker&apos;s '>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
          <strip size='100'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='dropdown' param='[federated.1bljdu50nsme671f712ck0dpzk0v].[yr:date:ok]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1bljdu50nsme671f712ck0dpzk0v].[none:industry:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{85808CFB-D425-438F-AF79-8AF540AFB88F}' />
    </window>
    <window class='worksheet' name='Top 20 Companies With The Largest Laid Off&apos;s'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1bljdu50nsme671f712ck0dpzk0v].[:Measure Names]</field>
            <field>[federated.1bljdu50nsme671f712ck0dpzk0v].[none:company:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{E76DF4BA-FE63-4C28-B916-A5ECDA52F9FE}' />
    </window>
    <window class='worksheet' name='Years with the Largest Laid Off&apos;s'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1bljdu50nsme671f712ck0dpzk0v].[yr:date:ok]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1bljdu50nsme671f712ck0dpzk0v].[yr:date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{E6EDE41D-11C7-4FF0-9DD5-D1FC8B4F402C}' />
    </window>
    <window class='dashboard' maximized='true' name='Laid Off Analysis Dashboard'>
      <viewpoints>
        <viewpoint name='Industry Percentage Of Laid Off Worker&apos;s ' />
        <viewpoint name='Map Of The World'>
          <zoom type='entire-view' />
          <highlight field='[federated.1bljdu50nsme671f712ck0dpzk0v].[sum:total_laid_off:qk]' type='size'>
            <bucket-selection />
          </highlight>
        </viewpoint>
        <viewpoint name='Top 20 Companies With The Largest Laid Off&apos;s' />
        <viewpoint name='Years with the Largest Laid Off&apos;s'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='3' />
      <simple-id uuid='{2C940CB3-F56E-4434-9339-128FBE69CCBD}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Industry Percentage Of Laid Off Worker&apos;s ' width='192'>
      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
      2LzS/P9URtYN2yr65AAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Laid Off Analysis Dashboard' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABJ0AAASdAHeZh94
      AAAgAElEQVR4nOy9Z5ClV3oe9nz55tRxunt6csQAmEHaHLALcpcQlwRJaWmSlknKtGSLP+iS
      S7aCKZv+YUmuklQsFcWyyrRpSxRFcne5S+xiQWQMgJ0ZYHKe7p7O+eZ875eOf9x+z5x7+3bO
      mPtUDdA3fd/5zjnvOW943vdIjDGGFlp4TCHvdANaaGEn0RKAFh5rtASghccaLQFo4bFGSwBa
      eKwhCABDPB4HAFTyacwkMgDA32sK5mBgcIi/tKtZDI/OAgAcu4L7Dx7yz2YmhpHIFlfVKOba
      eHD3FiZmE2CMgTEH1y9/jKm5JAAglZiH7Tb/7fT0lPDKxMDACH/lWBXcunEd8XQejAGuVcGl
      ixeRyBQx/vA+7jwYBgOQSMThMgZmlTE6MbNwzwScZRxmAwMDKz8XczEzO7vi91rYPggCIOHS
      Ty7AYcDVy5fx8ZUrYMzFpUsfgzEG13XhurUJUJuUDIy5GBoaXnjPhVnNYnRsDgBgFufx53/y
      F8hUHDDm4O3Xvourd8b4tRhjwMJ1+OvahfD2668h1nsY5bkhXLs/jkJiHCnbi32dMQDAlUvn
      UbTA2yL+XpIk4f0qhgbHFl7b+NEPX8ehE6cxfOMjjM5nMX73Y3i7TyAW8uLG3SGcOnYQADBy
      6zJm8xYm7t/Ej89fBGMMFy9erF3Hdfn9xH+Dg0N1rxu/47ouSolhXLk3vfiZW9gxqOKLE/v8
      GJwrosIU+FUG18xB80YxNXQbD2bykCsZHH/uK7j87g+QyRTx5Z/5eQBAITGB9z55gM4Ig4NO
      fr1nzj2JW7ce4Gy/B219xyABSM1PYXRyHhMT03j5m1/Bf/yzH+Cp08eQKtj46Re/ANfMoyQF
      0RH2o+Op5/DD196Ep2BgbCSH2cM96Olsq3uAdHwGIxOzmJycwjf/xs/i6tXr+Omv+fD62z9B
      X18MlYWtohwfg7f7KAIeHS98/jN47d1b8JdHkPap8FmdmJiYwIOHYzh57BBOnz6CS/dHoJZK
      eKo3jILlArKCSnoa7358H+0BGf6u45gcuIxSJo2D574CAJgauo3JogavlUIFGmbn0/jZbzyD
      /+cP/xIIhfGtn/o8vv7lI/jwnb+GJ9KBWHs3jhzo3crxbWEF1NkAh888hZE71yDJOnr8Kq5d
      v4Xe42dwc2AcX/vy5/HFLz+PO9fvoFAy8au/+Vs41B0FANy6dguf+/rX8dSZU1CE6/nb+1BM
      TuL2vWE8deY4ACCVTMJyHOSScyg7QFfPATz3/Gdgl2sq18L6LfwX2H/wIA4fPbFo8gNAJpmA
      aTvIpeMom7XJPn7vNo4+8wWcO/skPKqo5dEVGQAJBw8ewIknnsLRY0dx4MABnDp2CBIAf9cR
      lOMjcBjw5NEu3LpxDUakH3ev3MYLL34Vn/3iixgfuIFqoYCv/8Kv4dnThxCfHsfFO+P47NkT
      uDcwAFWWwYo55B3AiOzDb/36t9HV0wevIiEajaBarULTjfWPXAubgjoBkL3tyAx9hHDfSRw9
      fQw/evMqTvSF0N8Rwv2xWTy8ex+9hw8h0tYBTZb473p62jH4YASJ+Tk4DZfvDEiYKEgI6rXv
      DwyN4MwTp6Au/LxaraCQmYcjeQAAkhGEjxUwm8rh/rWP0Xv0icWtZoDrOHAcF/eHRnDmzCmo
      Qnva9nVjbHAQmUQcFbvWIl/HAVTmhpArlnHhw4s4c+7JZbpFgWyl4GoRhHqP4/IbP8LJM8dw
      8Ggf7t0awPz4AEKd/TCCEYS8GgCgo6cfx/cFcOPBBGLhCPqPnMRzLzwHjwJ0dnbUXT0Y68Lz
      zz6Da59cXKYNLWwLWAOmxkdZ1WHMdV02NjbOGKv9PT48yCZm4owxxpLJZO3LrsOSyRRjrssm
      R4fYxNQ0S2cKjDHGbKvC0pkCsyoFNp/MMqtaZKlskVVLOXb7zn2WSCSYVc6xP/nTv2C37z5g
      tuPyNriOzQbv32FTc7X72GaZZXJF/nlidpJdvXqV3RkYZtVSnt2+c692PdvlbYvPTLDh8QmW
      TGb47xyryu7cuskSmTxjjLFyPsOKFbv+mRaQnJti2WKVMcbY+NgYc1yXX3dgeJy5bu1eC28v
      /O2y2dlZ5jo2u3/nJpuaSzLXNVkqlau7dqWYYzdu3GD5UrWx+1vYJow9fMDefPU7TGJsBy0x
      p4rB8TkcO9S/Y01o4fHF6LXzOxwHUIzW5G9hR9EKhLXwWENd+StbD8YYyuVy3WtN0yBJEkzT
      BPDIvw8AmqZB07S671erVbjuEtGxDaLxfmuFZVlgjEFRFFiWBV3XYVkWHMeBJEnwer2b2NqN
      wXEcVKtVAICiKDCMT6+nyhOMYtttAMYYSqUSvF4vZPnRBmRZFkzTRLlchiRJYIzB5/OhWCxC
      kiTIsgzDMGAYBlRVrbue4zjI5XJb1mbDMOD3+9f9e8uykM/noaoqJEnik54EYCPCtdlgjCGT
      yYAxBq/XyxciWZbrFqFPC7ZlB2ANUVpJkpDNZhGJRPh3ZFlGqVSCoihgjMEwDMiyDE3T4Dg1
      V2a1WoWmaWCMQZIk2LaNXC7HX28FJEmCz+fb0DVIYG3b5u9pmrYrV1dJkhCJRPjCUy6X4TgO
      AoFA3cLzacGW2wC04pdKJQC1DlYUBbZtI5vNwjRNFItFyLLMVQFd18EYQ6FQgGVZddej14VC
      Ael0eksnP1BTA+g5NgJVVeH1eqGqKp9IO+mAWw6SJCEQCHBVzXVdrop+2rClIk0DbBhG3STV
      dR3RaBTlchmqqqJSqcB1Xfj9fng8HiiKwvVQy7Lqdg6PpxYws22bT86txGaten6/H5VKBaZp
      ckGvVquL+mY3gdRQTdMgy/KWLzY7gS3fAUzTRDqd5gYq/V+WZfh8PsiyDL/fz1d2UoEsy+I2
      AnV8OByGoiiQJAnBYBCyLPN/WwUyCjcy8KIOLcsyFEWBoihc8HcrFEWBx+OBJElwXfdTN/mB
      LRIA27a57qjrOkKhUN2277ounwiSJEFVVb4SmqYJSZLgOA5nTBqGwQeCN3xBcHRd34pH4LAs
      iwvlRkBtJ2NeVVWEQqFt2cU2AsdxkEqlUCwWd63KthFsugCQ7i66NcnYI1dgo15dqVRQKpXA
      GIOu6ygWi3Ach7sPq9Uq/1u8T7lc3vJVlFyXm3EPj8dTJ8hbuXOZprnIfloPSqUSHwvTNOso
      3p8GbKoblAzearUKn8/HDV5VVVEsFqHrOjRNQ7Va5SoAAHi9XuTzeb4ryLLMdX9VVeE4Tt12
      THAcB/l8nm/PtFVvJnw+HxfgzVABtlKPpqG0bRuFQmHdOyRdx7Is5HI57oUjo5g8RbvJfbte
      bLoAVCoVPukzmRrFORgMwnEc2LYNXdchSRJKpRJ3C7a11WjOFAcIhUJ1iS1A88lHtoLoGq1U
      KnW7z2bA7/fvSpelCMdxUCqVuMrm9/vXbMCLu6qmaVyNJfuF4jMUqIxGo2sS5mq1yseT5sFO
      2xWb6gUSAzy2bXN9v1AowDAMlMtl2LaNUCgEj8cDy7J4RNSyLL7aUzyArkP6fqPKIEkSX+Go
      I+n+m+m2M02TD9huhOu6fCf0er2LdsqVIE58UvfICyc6IujfenZax3G4aqvrOkqlEgKBAN/x
      d6pvt8QNSjq+z+eD67qwbRumaXKXmuM4MAwDiqJA0zRuNAcCAQDgnU+gLXi18Hq9i2yGjcDj
      8cC27V255TPGkM1mwRirczasFq7rIpfLLblrNtP3KUq8lklLY03qKsVD8vk8HMdBJBLZUpto
      KWyaCsQYg23bcF23blUm45ZsgqV+S54hugbRBMj/TP7/1aJYLC4SpPU+F1EhduMOQHq61+td
      c8SaHBaFQoG/10z1bJwiHo9nXfYF7Rqi6kMCthOTH9jkHYBWIlmWoes6AoHAsoPiui4nh9HE
      J4rAcrr/aqCq6qYIQDPje7eAbC4xir5a0EpsGAYXgKXsLBGiJ6vZGC1n5MuyzDUCkRe1k327
      JSoQhc7JQBWlvVwuc55PLpeDbduIRqMoFmslU1RVhWVZKBQK8Pl8ME0TiqLwnWW1q85GVxSa
      HKZp7tjqtBIoSLfc7kQeNBGWZaFYLHL7i7CSMuDz+aDrOvL5PI/hAOB2BwCkUilOoqNJLkKS
      JBSLRXi93l3hWNg0AbBtm3sMiEZbLBa58UpBLqICkB1ABpfruvB4PFBVFYVCgVMkSADIfSoK
      1HIg9WkjbtFKpYJwOLwrBYAxxjlUS6mHruuiXC7zXZj6w3GcdXnKqtUq53SJgkPODIqZ0N9t
      bW1Nx4qi+LuBWrFpAiCqGz6fj3t8iFVIKyqtMhTgIh1QVVUEAoE6tUhVVR4ZprhBpVJZ1XZP
      bNGNTF6Px7MrJz/wyAW8nDFaqVT4zur1emHbNkqlEl+dRXbqarCUM8J1XX4fsX3N2lWtVpHJ
      ZDivyzAMzjXaCWHYtNGl8L6madB1na+85OIUI7uO40DTNPj9fiiKAl3X+YogBmFoAtNqRyva
      aopKkdCst1Nd1+WBut0IioAvtcOJC4yiKNzTU6lUkM1mt5xCQgsHUVocx6mjt5AtkE6nN5zL
      sZHINPcCiRdY76QhXz7xyMvlctOGBYNBTnkm7xHlB6iqyqPJzVYcWinIyF4KYic3rk6rgaZp
      qFQqCAaDa/ZArQXijriW3YZW3Uqlgra2tkW/LRaLfGIFg0GUSiVu06x15V8vIpEITNNccixF
      +Hw+hEIh/r3VkhzJDUwL6lpRpwKlUim+JamquqptSXRjiX5yVVW5cUa6PF2LdFcKghBowjW7
      b+NryiNYyr1KKhAF5NYq1NQHW0VWIw8OMU0p6WQtRr7f769LGBL7sjFrTlEUrr8Dzd2bm41s
      NsvvvxJKpVIdr0vXdcRisRXHjWgZ60WdAJABQzcl1YTYmqRS0OpKfP5qtYpgMFinzyuKwtUW
      sU4m8ChyGQ6H66KL9Dd5FahDiI1JXg/6frVaXdYFSCF98iKtBaVSiRvlmwnGGPeQlUolvpKT
      ygZgTUJAuxNFz2nhEp+X+q6xHVuNtd5DbDNFpMVcEEqXFd2oG82nqBtdcTsGwOkEjDEkk0mE
      w2EEg0HO7xe3UvqbwvE+nw8+n4+vcsAjKnC5XObUAvJBh0Ih5HI5VCoV6LrOs8ZM0+QRTnKv
      ivyU5VZov9/PJ9yaO0ZVN93/T4ZrJpNBLpeDz+erW53T6TQ38il7rPH+5DXzer11C4fX60U6
      neZExGAwCE3TuN1FsZblGKKN/vy1PlvjNTYCxmrVyum65FnUNK0ucKcoCmKx2LoXqiV/RRNM
      5ICQKuM4zqIOIhWHor/FYrHO0KVVybIsRKNRvl2T358e2jRNVCoVRCKROtWFru31elGpVOoM
      5KVUHJpYa/EG0aq62Zla9GzFYpHbJNlsluc6EFOWmJylUgnBYJCreCTEFCikXURRFJimyfsW
      AH9mEoBqtQqPx8N3U3E3EFWh9e4Kjb/fTCEgEEescRwdx0EymeT8srXeu04AqDNENUcUgKW8
      L42CIv4eQJ3Pl3z+5L6jgSWpNk0TmqZxY41WSAB8RwgEApz8RQEdyi5r7ECabCsJgK7r3Ija
      KnecJEnI5/N8oKg6BgDu8iXnAHF0LMtCOByuIwwux90hUMwFAFddiV4iYjNUoc1woKwWjaos
      EfOy2Swsy0IwGFxTG+oEgHQuuoko2cutEuJ7ZDOQG5Mo0SLI1hB/Qw8jyzIP1NCAEU+IYgWN
      CSW0AgYCgbqJTvbHajpkO3Jzy+Uy2Pgsxv7gz9D57W9AffYkj5a7rttUf6dgHFATUtodmmGp
      9nu9Xi4wS43fep99Oyf/cvenxU5V1TVxopraAI1/r6YB5M/3+XxcRyc/+lIdI+4cIt+cPhND
      6sCjnSSbzfJ7UC6AbdtcNyaQp2k5NQmoueCa6ZC049F9ST9fz0Cbpol8Po+Zf/fnSL51CcUH
      o3jitT+oU23IuCMhJxWHaMRELFxqbJq5UsnmamYHNY73Wp9rI/73zQQ9M1Hv1y0AwOonPnWW
      mOwuMjlX8jUvRYRijPFgGv1NaLaFk4eqWCwu4pYQ7da27aaD6/V6ueA2Q7lc5ga86E5dK/GM
      Mcb18vBnnkL6vcuIfO5p7icn3Zb60rZtxGK103Dy+Tyy2eyq6R+NevhyhMDVrt7b4TLdCGgO
      UOrsmn67li+LnUSTlwaOJj7p5OJ3mqGZ4UQTgPhCVPSKDEHS+0UVgVyhzXQ/mqzNimc1S7Rv
      hMfjQbVa5SVYRLtmLbBtG5VKBYwxxP6LbyDy9c/As6+DG6Zin9A9LMviaqDYT8tB7MuVVvSl
      VKHG3zHGwKYT0Pa1w5Hrx7/xGpttBK8Guq7zwKrP5+Oxh9WiqQAs5Q5r3PLEsiQkAI2+2+XQ
      7NqiMUrvE6ErHA5zY46KYgE1r8dSGVvNXInUtpXaR1RoMqSpo1cLeqZcLsd3KNd1wWJBqHot
      0kzRWrEtVEqRDN/1gPpGzOii+zRTXZZTf+XeDtiM8RN2VtoRGj/baoGgMZFlec1BsUUCIE4M
      0aMjQgxo0Y1X6hQyjBsHRATVCqIHisViTfVaRVEQDoeRzWZ59tdy9zUMo04lowDKauDz+bjK
      s5aBJLdnJpPh9oqqqmCMIRAIwOPxIJ1OQ4YEO5WFFA1yB4BYMGAz0CyWsBYsJywrfZfeW82C
      sx6Qt5BsuA25QcX6N43el8YJBNRv2Y3qEWO1iDDp8qQCLNd5wWCwbmJSdQiREEfX9/l8iEaj
      dRUoloLf76/bGik6vFqspEo0+5z4TY22jizLCIVC3B0sQYJs6GAA7++N6tzLqSKiUS9+d6ux
      VvWI+kCsEiJCURQEAgHOJF0vmu4AJAiiLkn1fBqDYOKkFg1jCihRtJd0WbGEiQhd15uuyqIR
      TLVp6LcUbV5pECmKuJJXaj1Y6lpUQ8ccmoRxbD9fdcknzxcRMDBfzVPT1tbGWagbEQJxgRLR
      OOm327Bdbb/HYjHouo5MJgOv17tIrzcMY9NyiBcJAHFwiJhF9GMyBhujr0t1ouM4fAWUGYMk
      yWBY3PHUKavxw4ufk1+b6A6NnzeCVBmqULEdYIxBO9JbF3kldirtQuTKJbVP13W+W64XooA1
      8rCWEo7twGpcraKdFQqFeKl2j8fD1V0xFrRR1AkA3YRqykiSxFWYUCiERCLBC1gRCWspg5le
      yy7DrV/7JzjyT38LxpkjSzZkNQazuHKJ3HKiZyxHh6VJEQwGl73PetE4uDSIjDGe4EOg9M62
      traab9+yOWVhM0A78HLtXG7cVov17lKkwtK9idFK6bJ0XfL6dXR0cNVws6npi2wAYhQ2NlhR
      FHR2dsLr9aJUKqFcLtc1hrwzjXBlCYf/p9+EcXR/05Wa3svlcjyhphma2Q+0CxCluPHQjWbY
      bEPMdV2USqVFdgilcVKbxJUsEAhwwSgXiqhMzEHaF6tr+3Ir9UpOiqV+J362WTvBWoVAkiRE
      o9FFuzA5B+h6NMdI1dkqT9KalCiSXLGYUWMEtxGMMRhPHwMzahN7qYchevVS9XxkWa5LgKFd
      oFAo8Hzk9SS+bBREa27k5siyjFgsVpdbAYBTsylwKKkKKhFv08WD4izN4i/iSt7sc0Iz9afx
      /fVAvBa5wkVDf6kJG4lEmrqSxXYXCgXuHhbp+VsBLgCSJK3qFBBFURAKhXh1L+pIsZOXcnmt
      tFoUi0UkEgmk0+mmE0IsqttoiNOE2k26reu6mPvkFuf5EJOT6A3xeBzFYhEej4dv90Dzujli
      v4rxF7FPxffob9rVadFaanI2CtFSaCaUje1sNhckSUIoFFrR1mvML97qGELdDrCam5FdQFXe
      xIQXYHU+4uV2C/KCJBIJFAoFrhcTO3K5fOBqtcqTcLYD5Bggjrr4fORuJCNYlmVEo9G6VFBD
      1aDN1kqPx2IxlEqlphMLeKSGNk5wEaLgEK2akkgaf9eYkSdO6uXGsJnq0jj+jYuiaMSuxdYD
      sKGz2VaDdVeGowDEcpOSOhx41FHiZ/R5Ix2APgdqq35HR8eiCmb0nWb6LJ1As5UVHWzbxtzc
      HGRZRkdHB7KZDDyGAY/Ph5kfn0fu+l10futr0A/18t9Q9hxNTmKxUmqjmLxCzw484kAttUoT
      14k4RTThNE3juRl0Qk00Gl00SakPKRC3FMjOahbTadypGkHBS6DmbKEFohGu62Jubg5ATV3a
      6qJkG8r30zSNu03Fjmt0lTbqrKS/k9pVKBQWCRH9TXSAZsbxUn7tarWKXC63oVzRlSBJEux7
      Y+j8wjkwxjD7v/+fKN17iK6//2t48Hf/F4AxzP3JD/HEq/8O8HngyhJ3HLBCGV5NhbbgwiVG
      KzFoxaJS9H4z1UJ8Zooex2IxvsKTIFA2WDgc5rQScUGisWrGtRfVGo/Hw+Mb4ucAuGuXKoCL
      XjAAnL4CgHsal7IFiKC4HRX51r1E0iCJRxURmhlojdswrW6UV0y/E69B/xqrS4gD1ujnpntt
      dcc5joO2zz7Fa+bbqQwq8QyKd4c4Z8ZO5zD4y/8AI7/1uzy4KMsyZEODtFD4i+IC+XwehUKB
      r+TiszSqL3QsrJhqSoXGRGqwaBsQV0qW5TpqdOOOK6pQlAEIoI5tKf5GbBvVUG22Y4n3ItZw
      M0iStCjvYyux4eK4jNVyN8U6QMAjElYjvUJcueg3lAHWaEQ1TurG+xLEFZRC5NVqdds6sVgs
      QmIMsB1Ukxnc+pX/AdWpeUS+8hx0vxeSpiHyj/4OVx2CwWDdyTPiakmZYZTGKJL5GHtUH4me
      kfKrqe9W4sIzxupqgZJeTvnWpIJRyUUx+k7GNI2j4zi8veL71WqVF1RonOiqqiIcDvNc72bt
      W0o92gpsSnVoSvYQEy9Elxi/mbDKiCoS0Ssat7xmq0SjOkVbJQ0cHbFUKpXg9/vXncCyFlAX
      Ui0kp1xB+f4I5K426J210h65XI4/XyaT4VXy6DCQZm0ke4Gi3bQqrybesZo2k+uYVnAyOEkQ
      yGND9BVKs6RVn4x/qvNJAgGAX1esFE4CHgqFeN73ckb/dmBTan6QV4hcetRpBJF41rjVUsdQ
      GT/a/jweD48LiL8VdweqHJHP59He3s7ZlmSTiO3ZStC9ONdI1+B58ljNKF0gEUqSBGs2iZJX
      RTgYhLWQ4VUqlWCaJp8YIhrVys1cHUnVaBbTafT00P1ogaH+pHZT+8RKfDR+lLxPMRwqN0nU
      9mbt2k5sWtEbKptN7E2x+kCjKuOC4ebYXVwfuwfTNnGk8wA+e+wcAoEA/H4/D+U3MlAbr5PJ
      ZPhxQCR0rusiFovxpJJN2OBWBBUBM00TdjKLxI8/RMevfBNOMouSBJS1mn6se3UoigS5YkH1
      1jxVCgOPA5imydUOYjk2Fhsj2kAkEuEnuqwHpI5RqZFGWnEzNE5OEgYq0S6u9pIk8cLIFOMg
      Iad88a0uz7gSGGObf0RSs4kquioThTR+77u/j2ujd+p+2xFqwz995bdxrv8015OpyC5x/0Wf
      s2maMAyDC1wqleITkVa27TyClO7nRoLo+Pmv1nbASAA+rxehhUlFSTw514JaZTWhmZyH51AP
      T4Ok8uNUJ0kMjjHGEIlEuKpChcMoK45UwZVQrVa5Dk5jJlLeV6JLkzpG7tel+FXkwKAdhlZ9
      Mf6wkvt0K5GvpDb3mNRGqnSjJ8hybfyP/+mf1yY/Y4iWGLryNcJcPJfEP/7P/wceJiY4O7JS
      qfBdhegEolciGAyir68PXq8XgUAA4XB4W1eVxoCP67o1erPX4Hp1MBiEOTSJUCiEI0eOwDAM
      zkxNp9OQemqEuK6uLp6jTOmdHo+Hk/4IVP6lUCjwtMlAIACv18uT51eqw0nntNEz0OpM96NT
      PIkX1viPchkorbRZv4g7MKUt0nfL5TLy+TwXuJ2Y/ABwc/L85u4A4koPLN4yX7/5PgZmRiC5
      DL/2APjWvASVAbf9DP/qSYYcKvj3b/8n/Ju//bv89/l8Hj6fj5cqpHPHVFXlwa6dOsEllUrx
      yg1UkcBxHLS3t9eddKmcPYlcLoe2tjZ0d3djdHQUQE2FcEdn4Tm2vy5mQTuXx+NBJBLB3Nwc
      NzDJO0MTHgAve87VsAVVhhYRWpjII9eoNok2gK7rdYn6wKPoLxnlooEsgl6TEOZyOfT19UHT
      NE4WpJ1jqbyQ7YLLXNyfvbh5AiC6NZs9lCzLeOf2BQDAs3PAK3MSEhkHjgscs2T82hDwh2eA
      a6N3kC49ypMlNYdKrjNWUx1E9uVOdWLh7jC0I71AqQqGWrvoWChSI+hwQKrpo2kajh49ioGB
      AQCAdqS3jkxHtU/FHAE6LIQ8K5qmQdM0hEIhXu7Q7/fzQluqqqJcLnPDnPqLdlKPx1OX9NQY
      rxFXdbG2kliiphGiA4LYuUePHl0kKK7rchrNTo0bABSrGcTzk5snALR60LbXbHUombVBDpsA
      cwHTBmwXMC2GiLkQgHFsWLZVVwJFDOjQwG+Xn3g5+E8dQrlchqKrkACoDSW6RRcitZuK2Eaj
      UQQCAYRCIeTzeRSLRb5KWzMJuN1t3KtEk4XckNS/RLemfiK6A6kqVIqFfPwUV1gNvVhczGhy
      L8VYpWejoKaqqohEIk13CTrCdqcN4ER+Ei5zNs8GkCRp2Ynpui6OdPUDAG60AyUNaAvJiAUk
      +H0yPuiofS8WiCDsDfIqE412RWP1t50E1/81FdBUPuDioNNqSmUdSc+PxWKcC0SeHq4yBetL
      NJL609nZWafuEas0n89zYSFqCjkJ/H4/r7Mq0rJXei7qe6KaN+N70bPSbuz3+xEKhWqGfsOh
      F6QhiEc27SQy5QSATT4kj/J6xRPBCYwx/OwzX8dr195Dwu/i984wvDIO+G0J73cyfNRX+97L
      Z1+EKit1FAfRu7SbzuqNRCK8SjP5yEnnppW3WCyio6NjEcGN/OFUeoVWXMuyILcZyGazfPeo
      VCp1BwWK1TCoYgUdLCjycYDamCSTSciyXHeeQiP7szEApcgySrcG4Tl5CCtxa+0H46oAACAA
      SURBVHO5HDfuyTaLX7kDJxarI/QlH4xA6ghvesn59cC0a9rIprtByRBr5j473XMMv/6VX8If
      v/cdDEeBfx2t//zpA6fwt7/0C0vyRHbbae1iKh+pNuSWJfVHrJUkDjypjCTgpDqR6lcqlXhJ
      eMofJgoDraSkElJ/iaXmCXToCH0nn8/z8xdEL1Zjn7NMAYP/7e/h2B/+MxhnjjZd/cW/xZ2Z
      MYbIU8c5uY9OiDGiIXia0B92ArJcE8xNF0Vd19HR0YF8Po9cLld/Thdj+M0v/y30t/Xg/z3/
      XUymZuG6LiK+IF4+9yL+qy/9IgxFb8odoiN0dpMA0KpLagKtvNRu27b5iZiNdtFSIX8KAFJU
      nIxWUS2hiSYaruQNE1UkKkJMFTHIoUCCtVxuhRQJ4IlX/wByJAi3QUhImMUdpFKpcNVGPLSD
      PFJerxd6bPcsYF6tFrvYkr2IClxRSUJKynDdWn36r5/+PF468wUkCrXMr7ZgFKqkLDkgu3Hy
      0wFvYllIOtiDQDVLS6USd5dS0CiXy/GgEBmyjDE4lo1b/+zfwv/sKcjPn6qjg4dCIa7G0IQU
      7QHgETGQ6poGAgFOGaFzBcSA4nKQhMkP1HO4RPUUAD/7V1RXaR4sVZ1vJ9Hm3wdgiwQAqA0E
      5X9mMhne4eIxR1FPiKsLPJK6kCBC2yetYLutA2niU8CnGfOUXpOdQMWyxHO9stksf17XdQGX
      wcrmwSomP6jDNM26U3WoMAFNMnHHod0IAG+T4zjcAxSJRPhZcOQOFdE4sWnyk9uUor+iigc8
      Erxm7tTdNnYAEAvsg0fzbw4bdCm4bu3gAlF/JXeeoig8qEP/mvn1ifK7lcktawWd9JLL5bhX
      Z6lBJvbkUoYfZWuJoOwwEbRwSJKEnp4efpyUuANQfoHf70fh+gP4nz7OaQ9i/1K+AS1KVLaS
      HAyUZyAWISABFQVCTKihqiG7xUO3Ehhj+M6Vf7W5VIhGUCCLtn5aXUhVoKijeJp840Qir8Z2
      kNpWA8uykEqlOFO1sSxkI0SdfTlUJ+f536TLi1AUhVMoqtUqQqEQQqEQ/H4/1/tFMlrg7Ane
      Ppr8Ur4I9+Y9+B3G+fqSVCMV0i5DkCSpzpvX2P+NiUhbnYK62ZAkCU/2fmnrVCC6ic/n44cW
      UMieJsxq/NKyLDdNnNgJMMa4Pk+JHURnFldYEZSXu9TnBDXyaLWleqe8fmjD78rlMmzbRnlk
      ClJXDMFwiJ8CQzwiMoApsQZTs0j8zu/CTWUgx6Jo+/3/DWpvN4BHnifyWFFAk9QjUfcX+4JA
      qtRyBbl2I452PrO1OwCBEjrIbw4A1dvDvHjUclXMSOfcDTuAeAAD7Wy0MheLxaaHgpDuTCmP
      RFhb9L3Ao+AQUZWpgFYjGKtlhsUv3EApk+WqER0URwEwIgxKkoTKm+fhpjIwbQY3la69XljF
      KZ+jWq2iWq3CMIw60hupVmJ0XipVgUwBgUCAB/V2o66/HFRF29odgCD6wIPBYC0a+PQxrh6I
      xhPRe8kFSJOfqL8UyNnuzqbzzizLqlNPRD8+kcXE6C+t5rIs86R4mrBUtr1ZQS/GGNrb2/nz
      N1MNu//mS9wNS7sSQZJq9ONMJlObzJ1tAABlYa2RO9v5dSmZiDK8nKk4vJ0x5G0bqVSqRmab
      SkE7fYgvZpWZFKx0HqHTx7lhvtcEANiklMi1wHGcuhxiGijyIVP8oL29fVFmEq1IdPypWMN0
      q0ErYWPdfvKvUxtICIBHR66Kwk2cHAqgua67pIoXjUa550jcJakIGPnYiYTXrB8YY6hWq8in
      0ij90Z+icvk6PM+fhec3fhlMrZUqoV2ZMcbPKhbzjWmn6+vr47vXeuvx7zZsuwAANSGgHGJa
      hci3TQdKHD58eFHgiHRM13WRyWR4BevtGgSK+AKPBp4YmGIbaEVudANSmT+aPLTbNTtzjHTu
      9vZ2FAoFnv1GuybFHahE/HLJP5Zl1XIPBHcpgKY1Oi3L4hXriHJN9z1ypFbcuJnXizxS21V5
      e7OwI6QMRVEQiUQQDAa5EQmApwVqmsbVBLIRKFZAv29ra9v2dqcTydpJ9t5HmVe0Cos0ACKi
      iUYhrcRiOXd6RhE08UulEr8G2RuU6Ub3W+2B3iLvh6gVSx33REk8mlY7wilQtqHuiyCXy2Fq
      agr79+9ver+lBHm3Y0dZSWJkFKhtq7TaTU9Pw3EcdHd3b1lJ87WAMQa7UIIOifvuaTIS6Y30
      dUoIJzuGVBYKFlEAjQ79Fv3p9Df5703TRHt7O191xVPlV+txIc4QLTRer3dJOjKNCeUUKOEA
      tzMoUUaMD4i/A5Yvzb4bsfO0PAGUuNHe3o50Ol1nUIqgVXajx+OsBZIkwTZUFItFyLKMarXK
      k1YKhQLXwXO5HLLZLNffSTUgfzsdfyoKgghKR6Sqe5IkYWZmBt3d3ZxBulatVTTSAayqz6i0
      YrAthGoiwWkdS6VbEl+Jkpf2im2wqwQAeFQaLxaLYWpqik80QqVSQTwe57qmWFeTMqW2qvP7
      +/uRSCR40gllXKmqikwmw3cAUkuUdAF6yA94Hh3PRCoOlQsRmbNEq6AyhgTygomEuFAotKak
      f/LyNHqLlgJjjJcwlGUZs7OzaG9vb7r6k2NCrBm6VwRgR4zg1cJ1XczPz/NKasQuJP24Gbaa
      OGfbNmZmZvhJOaFQiNMUKNGdDNO5P/4rBM+ehO/scZRKJa7PU5BJZFFSnjPZCiLFgshtADjv
      fqm6OsuBSImO46x4sCBV46b70FnJS9ksVLCAFqzNPsllq7DrdgARsiyjq6uLHx2azWa5Lk0T
      QqydI0aaaaXabBVJVVVed4j4TVQekBJcyKXb9Rs/B9M0eVU4CqQ1qghEmwbqc3DpNQBemJaS
      YNYj4HSPbDZbV8WtGchblclkEIlEmn6XhJWq3In8oL2CXb0DNIKiqbLlwNVq2z9VfyO/OE0w
      mjBtbW1NT5HfKGzbxvz8PC8LWC6XecVjYrJS5Te6NwXCSM2hlZU8M6Sm0EpK/CnKNdA0DeFw
      eF2rv4iVVBSRVDd58x5ih/bDF6yPMzDGMDk5Ccuy0N7ezvt4qTyH3Yo9IwCMMV6GxJ6ch9zT
      zlfhQCCAbDaLYDDIiXM0sVRVxf79+3dkSyajcHp6mhu95PqkyS26SZPJJAKBALcBxLLzVFki
      EolsecEvYvFKUq2c4/C//L/Q9XNfw4FXXuIqT6FQQDweh9frRXd3d1Na9V4Qgj3hr6LJQVQE
      aV8bD5oBj5IxqOIY8VuIKdlYXn27IK78JJTkxpQkaZF6Jh6gJ0kSlKkk9/UT52Y7qt1RLMCy
      LJRm40i89iESb17gC87ExASSE1NQEzluU1DkmIz69ZZs3G7sOhug2cohqjbZbBY+n48ndDQG
      X8gTJILUEFKNttNPTVXYxApvzfRpyvwCwCOvxrH9PKK8XaXeCVRm3jlxAE9+518jdvIwPwNA
      13UkvvcjzP/gXTz3xr/n8RtS48gecBYKAIs1jnaCx7Ucdp0ALMVnIZ86JXiTT3q10cdisYhi
      scgFh4JKW72ikn+cdilSyxpBSfX0PMQT8vl8TcuIE7aqwhrRGjxeL9wjvahIDJ4F+oXf74f+
      6z+Htm9+Ad6An5doJBe0yOAlgh2VrSchaSwLv1OV4vaEDZDNZjE9Pb2I604sxNWgWbYZuTHF
      k1W2AtVqFUNDQ1BVlTNDGyHWPKXPq9Uq9u3bt2TUljGGiXcuovtLz25ZoSmiclNEmt6j/4uc
      KMZY00PtbNvmZyeQp46KgpHHjEqtr6Zo12ZiTwiAvUDLJRWBDqZeC5ab4MFgsGmAZ7PAWO0U
      Haodqus6/z8NNnl7xCJZkiSho6NjyV2Kdkax2vJWtZ+Sa8jlKU5WcQo1o2/T6k6eM3H8qIIc
      8CjNspl9tFXYE0YwbZmNJbVXC4UBUsVc+YtbBEpWIf2Z2JgirYC4P0RXoGdczq8ukgW3uv26
      rvPaP7QLk91Cf7uuyzPmxPER011DoRAfz/b2dh7PoSCbWEhrO2IKe0IAAPDJAzw6UKJYLKJc
      LnNvUDMoLsPg3/093PzG30Pl+oNFnxOleKtBqz3V+SHGK014ADwiTAdKUC7AbgG1n5wJFLeg
      XYsO8SNbgISYhIEOVezv70cgEIBhGAiHw4sqCYqnXG61grJnBIAIXZScQfYArUylUqluReXG
      VaGE4u0hmOk8SneH665JR/XsBHuRosbVahWlUokn0tDgUzW1ZtSDler/bzdIMMixQG2m46vo
      wG6azLRrADWvHfGNGq+5XLWNzcKu8wItB9oFyGAk3ZfKjlDgiHRKWZYhRUM48i/+e5SHJhD7
      ha/VXY9KiW8H8vl83WuqqUNqBZHcaEfQdZ27FEVUq1V+wNxuBNEjKJ+ACHLiLitGv3faJbqn
      BIDSJ6mePumVNEk8Hg8/2EE8ejTw4vMIvPh80+ttF8hrJd6TElyA+iwyokqoqsqFmVQjSlPc
      jSDSnpgbAYDbDOIZZFTbdCudD6vBnhIA4FHChsfjQTqd5hOEOpvOFRNXl0ZPBWG7Kk1T/i8Z
      v6TG5PN5rk8bhsErvlFUW0xZJFWJ6Na7EcR9AhbXPnUchx8PSxUkljpLYi3Y6O/3nAAQNE1D
      LBbjCSRELQbQtDxJI8h+2A5QCqdo0FYqFXR3d/NVU3R1qqrKKzWI16B27zYBoDwGOqyv0S0q
      enNEo5/iAyuxW5eb5BvdxfesAADg0UWqvkyRU1phG8uEiAOzVEBqq0CFq8TitKQSeTweFAqF
      uiT6Rt8/CbeoNu00SC0Tq1+Lal6jZ4feEz1EVBJmOSEgo38rjOI94wVqhOu6KNx9yHNQxSR1
      2mYbj1miyHE0Gt32PGMxak1cGfFZiDtDwSBx1aSAF4BdUyiYsdopMDQ5l2wTY6gMjnPBoJiA
      uPgUi8VlyXMk9Fvx3HtWACRJgvfEQc4t0XWd1+KnjCrSmWmCtbe3IxwO79ipkmKhL0oyJ0El
      gp9YHbvuWb1efibYbsBKQTpgQf0pVjD5x38FuItPDBKvk81mlxWCrRqvPSsAAPiKCdQfEkEV
      F8jIIjfcTtepJ7etJElcFaIa+hQToGhpYzs9Hg/a2tp2zRFRq6UrKEEfTvyL3wHk5qXjaWeg
      U2+2G3vWBqASHY00WyJkFYvFusyp3XAulSzLPAhEpUeAR+5Dj8ezpGq2G9QeEWJ/r7dt4u9X
      s6NsBfbsDkDBFIJogNE5XTTBKG1xpyFJEjo7O3mQi0Cl1olqvFdAKptYKn091IWdrCSx88vi
      OkEsSEKz7CoqF74VOcHrBXGBRHcg5SVsNNd3uyEGG8WJTwXByD1Nx8GKzyb+hv7eiQDfnhUA
      OveKTlCsDk7Ac7yff066ciAQ2BXqD4EYnGJZREp2303tXA2auTl9Pt8iJwNl8hHlo/G39J2d
      yNveE/kAjWCMIZFIcN85kbFESgQZnLvFbSiCeD9iheXd1sbVwHEcFAoFnuhDaPYspmk2LQVP
      un+zQr1LQfTsbRR7a8lZgGmayOfzfJUXA0tALdoYi8V2bY1KYrTudZDathqQu1r09oiG71rV
      HypAvNEx3p0zZAWQC7ExmESG1F6qTfm4gNymxHOisaKcgLVei4p2NZ7XsFbsyR2gGbmN3J/i
      WbUt7D5Q3VeK0jfL1V4NKM6z0Z10T9oAlmWhUqkseniqo9/C7kfjtFurAFCe8kY9R3tSAFpo
      YbOwJ22AFlrYLLQEoIXHGi0BaOGxRksAWnis0RKAFh5rtASghccaLQFo4bFGSwBaeKzREoAW
      HmvUCUAlF8dcprTkl69fu7bsxZjrolha+vccjoWLFz7C5SuXMTGTWF1LVwCd2LgeJOcmceXK
      FUzMxAEAxfQsPvjoArKlWgnG4eHhpr+zSxkMjM3w15nJBxiJLzw/Y5gae4grV65gPpUDAMxP
      DOPCx5dRsRxc+skHGJ+Or9i2iZGHqDoMYAwPl2jHuuGauPfgIZhjo1iqkcru3LiOakNmYrVc
      guXU3lxpDlRyCUwncpvWxGKhALE5k8PDaF7n28X9e0LxY8fCtRu3V7x+nQCU4mMYns2jVCig
      UMhherY2QMy1MTUxgYGhETDXRqFQBhhDoVBc+GwcuUIJ6bkJfP/V1zA9l0CpUIBlVZFMpWrf
      R60+JgMAp4rJRB7PnjuHWx9/iLIDZFNxxFO1wlGFQgGlQhbFiolyIYep6Vm4jKGYy2B2PgHG
      ah2TTScQT2ZQKeXx3e99D2MTk3BcF/G5GczGk2AMYK6DmakJJFJpuAyolPKYmpl7VKi1mMBP
      rg3h7LlzGL/zCWYyRXz45rvwtHdAV2rdc00Y9Eopj7GxcVRtB4ruQTRYS2FMJeYwNjyIVLE2
      PJnpAdybKuLc2adx+YN3UKpW8Pq7H2BfVweSM/cxNJqB37dyAohfs3H+wnWkpgcxPl8EYwzz
      M1PIF8sAGLLpBCanZuAyhlKxANOsIp3JoVzIYWJyCvbCxC0W8nAZkM9mULUdmOUSTEdCWyyM
      5OQAvv/jdzA7n8TczDSymRTm4iks5Gvhk7d/jI/vPEAmX8T09DQS8zPI5Gq8/kIujdn5Wl8D
      QCExgYHxhUWNMSTmZjAzn+AH61XLBeSKZdhmBePjE8gVawtGJhVHIpUFA1AqZDE+MQXbtfHa
      976LodFRFMu1fr1/9Soodd51anOv1hYJbW0xPkYTExOYmJ5dsX+bqkBX3nsbD6bjmL53CUPz
      Jbz9xutwZA2u68AyE3jn/asAs3H+gw9x6b23UZY0ZDNZaLoBw+OBz2Pg0jtv4Tt/9X1Mz8Xx
      4zfeBHNtvPPu+br7MMYASUJ8/B5uPZzFxP0rGJxK4bUf/Dn+6tXXEZ+ZwLsXrgGOheTcBH5y
      9R5ycyO4cncY7/z1DzGXKeLKT95DyVFgGB74fT44ZhmlqoP5hzdxbzyBD955AyVHxk/efwul
      Yg7vfPAxnFIS5y/dBABMDNzCgdPnoMgyzp05gnuDkzB0A4GAH4qymKCVSqXh9Wh48813INlZ
      fHJtAAPXL2J4JguRz3Xr6n2ce+FJyIqKU/0RPJyvQPd4EPD74fEY8Hp9MPSVybix3uNwUiN4
      ++IdfOH5M7jx8YdIlx1ceO8tFCo20rkCWCWN85du4vL5t/AXf/kDTM7P440334OmANlCbYIN
      Xr+I8UQR773+PVy9M4LLFz5AwbLxySdXoRsGPB4vvB4DtlnCfDKH25c/4sKs6x74/H7omop8
      Oo6SyfD+u+8gn5zEhWsDyM0O4cq9sUVtd60K8hUb2fE7uP5wHu++/iq+9/1Xkcpm8NqPXofu
      MfDWG29h9uFt3BmNY+zOJTyczeHNN96CoQLZXBm6x4A/EICqLJ6q+WwakmbgJ+++iZIj4ePL
      H8MspvDGuxdhGBocZ+Uk+6YCIEkajh4/gq72MIrlCqpMR39vN0KBxXX0j5w4jqmRh4ins/D6
      /QgGg4iEg2BgeOnlX8CTp06gN6Tgzt3b6DxwEjRH5qfHce3GTTz/pa9h+uEAqmYFlqShUipC
      0oP4W7/8bUi5OPpPPone/ftRmBlHrlJFvuLANSvQvUEcPnQA4YAXkqIjGAigvS2GXGIWg8Mj
      SGdSSGTyyFcZjvT3Iuj3IRcfRyJXQTxThsxqNWg8Hi+qC5zySqUC3eNFMBhEtK0dutrILGUY
      uHcH4xNTSKbT/N2hqSSePXMMHW1R/p7Xp6JSqaX/lSsmvF5PrY3t7QiFgwgGwwj4VlHjR5Lw
      +c88AW94P3RFwsORMRTScWiGjkwmifv3BjEfTyK5sMN9/eVX8OTxI+jvbcfwyBgq1dpznjh9
      EoN3riPcdxqlxARyJkPUt1A0wOdHMBRGOBSAqvtw+NBBtIX8qFgOgNqh45FYG3weA8FoB/r7
      euBVFUyODKJgWsibgFspLmp6LjmLweFRZLJZJBIZ2FDxi9/+Zez3mdA6j6G7sxMeXcGD+4Nw
      nRKY5kExl8P+3i4Mj46hYjkIBIJoa29vulhMjA1jbGwM6fg8igvVMONjD9B/+hl0dnRC11Zm
      Bq9oBEuSAtUpY+DhMGbjKSiKH2Y5gcHBARQqFkzbRW9PD8ZHh6GoOqqFLKbnElAUA15vjar6
      7GdfwPe//9d4+onD/LqdPf149pln0BEN4vCx47AtC7G2DnS1ReDz+aHIEroPH8XEvesYHBhE
      oKcfmmMhEm3Dvu6ORe00FBfDYxNIJRPwBML84f0aw72BIUzPJRDq6EdQY4hEIujr7QEA7Dt2
      FvMPPsHQw4e4eGcKz5zsXXTtSjGHkZERpDJ5pHMFhEMBiBTa/s4wPr5xF8OjE/y9pz77WVx5
      /x08fDiA4YyEw23rz3dVPV74F9IFjxzsg6t60dWzHx5WhslU+LwGAAZF1eH16IBjQ/OF0BH1
      Y+hhbWX2RnswcfsCuvuPQa7EAV8HX4xUbxDl9Cxm48mm92/rbsPw/QfI5uvtu57DxyFbVUQi
      MfT0dPL347NTGBkZQyIehx4IQ9dqk9fj9UNTZCihblRnBzD8cAjpfBknTx9DqeQgHOvEvo4A
      dE8QHbEwhgaH0NMRxq07D7gKxOBgYmQEE9OziMcTiMXa6iZxe99hjNy+gocPh1CqrnyOQh0d
      2rUt2JABx4ZqGGCWCVdWocBFJpeH1+OF12ugVCjAlVVoigxNU5HNZOENBOHRNVTKRZiOBI+m
      QDUMyADsSh5vfXgV33zpK7UbMReVqgWPh3JAF/RXGwiHAjzdDQDMShnFioVIOLjwt4lIJAzL
      NKEbBqxqFaqug9kWcsUyIuEQctkMDI8XsqKiVMjCcYFLFy7gpZd/FpJVQb5YRjgShrKQTufa
      FjK5PIKhMDRVgVWtQtZ1KAs6TT6bgWk78Pj8UOGiajMYugpDV1E1XRiGilw2A1UzoBkeaAvb
      tW1WkSuUEI5EoMiScMaWA9N0YRirK3LFXAeW7ULXtdqhdbkMZNWDgN+DQj4HWTWgyDIkMKi6
      AVkCqpUSiuVaX8l0kF2xAI/XD9uqgMk6DE1GtVrr60qpAIvJ0FUFum7AtqqQVR2KLAGMIZfL
      Qvf6ITEXhmGgWq1CNwxUy0WUKzbCkRBkSYJrW0hna0ZwOBpFMZeF4fVBkhSAOdANAxJcxOcT
      kCTg4ys38PI3fwqlQh6mszD+C+McjdQyxbKZNPzBCDRVRrVcQqFUhqxoCAd9yOTy8Hm90A0P
      LLPWv5VyEabNYOjainnG25APwPBw4D66DxyD39j+BLTk3BTGJmfRc+AIutt356ESjx8YRoce
      IJWv4MSp0/B7du68g1ZCTAuPNVqBsBYeawgCwPDJJ58AACYf3MT5K3cAMFy+fHnJH1uVNN77
      cOnPCfn5EVy+M7rBpj6eYMzFjSuX8Mknn+Da7VqgZ+jWZZy/eAWlcgmvv/YjjE3N4dYnP0Gi
      sHNHwe5VCAIgoRCfRd5iGJyKo5qeBXMdzM0nwBwTN69fxa27A2AMGBsbxcCtK5iKZ2GaFqxK
      AaMTM8gm53D58mXMJbMoZeKYmp3Dhxc+weDQKA4c6MH02ENcuXIVicz6o7aPGxJjd1FQ2vD8
      88+BpccwMpvA+fMfQ9EVjDy4hbHZmudmNl1AzKfg7q3ruHbjNkx7+wvN7kXUqUBPnezFrYFp
      MMjQJaCQnoCv7QAuffAeOg+dRIenjE/ujOH8m69ipgB0RPxgro1333kf7e0xfHTpGs6eO4uP
      L3yIwvwY/uwHb+DQkSN48vkvoiOg4sLl63j67NMI+nbnIW+7EZPjE+jr3w9AwqG+bkwnyzh8
      8CDOPnMWx44exeGjx3CgtxNfffFFlDOTGJkzcebUMTSJ4bXQBHUCEDtwGumhC1C8UZzoC+GH
      b13HySeOIVO00BHyIdbZiVwyiUj3QXzlc89C1xRMDD9ABV74dWBmehI3rt9AV08/AAlf+OpL
      6O2MLVRwk/GVz7+Ayx9fwO37IzvztHsQHR1tiC/452fjSXTEmhWRqtUb9UX343ivFx998D5m
      l+F0tfAIdX5JSTZQSc/izJe/hc6Ajfgb19AdUOF99gzeP/8RZKeC5z77Zdy8UlNhJEnBqaef
      x5EuHR/fHsXTTxyDZbswfCoUXYFfEvzczMHUzBwUVeV+6RZWRu/xcxj54Dw+yU2hbAfwxe4Q
      ssEgZACSrMAv1OQ0i1kkc2UoSquPV4uWG7SFxxotN2gLjzVaAtDCY42WALTwWKMlAC081mgJ
      QAtbjv/5H/42/u3v/xv83//5VdhWFSPDwygXC/jn/+Qf4+boJByrgpHRcbg74I/Zk+cDtLC3
      YEoe/L3f/h38r//oH2Lk3AG88877iHYfRDyRwMxcHBe//x8QjLbhQscZ/OrLn9/WtrV2gBa2
      BXa1iCpTcOvieajhfTBtoK+7A2effhLjoyOYz5nwKisnsGw2WnGAFrYc3/2TP0KyBHzuqz+F
      kJPA+eujOH3qOAIsjyvDGXzuVBfe+OAyXvjiT+Hc6UPb2rYdFwDGGN65OoJS1YZXV/HSc4dX
      /tE6YNv2lh9Duh332Gw4jvNYn6qzrtFiroMbt+7g7NNPbUoj/uLdO5hJFdEW8m6ZALTQQjOs
      SwBKmTnoqoZ4Nofbn1xCpKsPTjmPcCQM0zThMRRMJco41R/FRKqKWCSC+OQg9FAnZLuCWCyC
      e/cH0Xv4FE4eXpyE3sLjjbFrDzF2ffkiYAefPYr+pzauLq1LAKZmk5AVBXOT4/D6I+jqiMI0
      Q1BZBbIsAbKGgJpDNl+CrvtgVQtgsh9WOQ/D44XEHIRinWiPBjf8AC0QGDLJeeRNCfv3dWLk
      4QOYtoz+Q4eQjU+hUAUOH+pDIp5GW8SHZN5CZ9vajifdLmTnM5i8vbjOkIi2/sWVQdaDdQnA
      kROnoSgyHMeFY1uQFA2yLEGWgErFhMfQUdm3D04piaISQ2fYg2pfFaqmgTk2JFlFW6cJVatl
      7L/4zCHkSyZ8ntVVSWihCRZMufnZOPZ3x1Aou3jyzAnYlRzmsxZ6whImODW4cQAAEGtJREFU
      5pNITs4hPmPj0Kknd7jBuwPrEgAympqdeO71eh7939uLwML7Ho+Hfly7sVorCsUYQ1vIC+9C
      iZCrAzN45vi+9TTr8YYkIxIJQ5pIAEyC15Bx4+plRGJReP1BBIMyUqkSUrPjiPQdgU9X4TgO
      P2B8N4G5K7fHdRls217ztRudFCsLAGMYHxmCJXtw5OD+pl+pFNJgRhTeJgu4a5vIl02osgSv
      39808PCd9+5iJlWrLPaVswdaArAOMNfBzPQ0Eok40rleyLIKw1ChesNITIxhIC2h9+gxFLr7
      0R4ApubT6O2sVbLbbV4gSV45l0GWpU3xuK14BcYcVFwJxw/3YfDebRTLNjxBD9xiAaovjFSh
      gjathKKnD2pxBuFoBJK3HZXUPErVEkIBH8ZnU+jo7EBQY8jkivB5NGQrLmKd+9DfFdvwQzwu
      GLl7Ha43iHQBeO7JI/UfSjKi7d34Yls3NN1AwOeFyyToho7utjBsFzB0FaGnH6mvLaxmB5Bk
      mKUCJqfn4DAGRQYkzYOjB0MYy6uQE7Mw2npgMw2+aDs62wK4OzQJiblQVBWhaAzBQgXMdWEv
      VDdzXIZDhw4jk28lx68F4UgQ/+FP/hQjcQs3TvTjhS9/A08e6wNQO2nd6xVrtz5a1RVV469U
      Van7/+OOFQVAkmSceuIMbNvFvq52OA6DqiqQJOBwkMHqeAGGocM0LWhaOyRJwumTAaiaBtdx
      ICkKnvAHIasqFElC1bJgaBogSQj5a3bB1545hPxC7ccjva0dYSlkM3m8/MovYSrp4KufPbPT
      zflUYFVKlKKoZLtCVBcV5ZH+aBiPKj0YCwav0uRHHqFWoyRJYIwhGvLC0GsGRLZQxQ8+FA46
      2CBCPh0vPrO94fWtQiQaxP/3H2s7wMM7l+p2gBbWh3VbETOTY8iVbBw9fgQb3Uy/KxjBm43+
      rvCnRgCi+w7jZ1/+Bt766AYOHHsSp4+2gogAkEvmUMjkl/1OqC2MQCSw6P11CoCLfLGKEyeO
      Y+zhAPLFEnTFg4rkIGCoGJ9O49ShDkiBbmTi08hlMzBNB8FIFGZ2DmlLR2/Ug0jXfnR3tFSe
      1aKan8MP37uNv/Prv4LbH/0Y716O4KXnj+90s3YcF179CT783vllv/Mzv/U38Pmf+8Ki99cp
      ABLgVDE6OgHLcaGpChxHxqETB5GcmkLYKyFbqKCUHocsM3T17kclX4Cuq0iVPDi0bx9UuNjX
      2bbrfNC7GxLAapRhx3XQKnyycaxbAI6dfAKmZUPTVFi2DU1VIUkS/AcOYl9PH3Rdh2maUBfe
      R1ftAIW+vj44jEEV7IKvP3uYG8GbjWhg/QdT7DYYgU78/E9/Bq/+4C+x79BJvPjcsZ1u0p7H
      um0ASZa54WvojwxgSVJgGGQYNzmcQJYX2QzhgAFtC91y3//gPlzmQpYeheHCAQMvnttjtoEk
      4eDxJ3HweIvGsFnYXPI6Yxh9OAhX8+HwgebeiXQ6jWg0Wvfe996/t2VG8FI4tC+y5wRgZvQB
      3vvoEuYSOYR9Cp74/Mt44YkDO92sPY1NFQDXrsKSDRw70Ifbt27g8OGDmJ1LQpIUyJoKs1wG
      gwu3lIHrb0c2mcKRw/2b2YRPNfYdPIGfC+r409du4aefa8el6aQgAAzpxBzypoT+ni7MTI6h
      UHVx5PAhzE2OomACRw7vR3w+jbaoD8mcia7WiTmbmxMsqTpgFjA8NolYeyd8vhDy6QQ6O9sx
      NzMJ1eMDs6uwZR2zk2Pw+he7pVpYHr7YAZzsUfD21Ql8/XNCMIwxyIqC+FwCdiWHeM5Cmw8Y
      Hh1FvOAg5nUxMZfE1OQM7t97gFCoRUUHNnkHkCQZx04+wV+7jolY1354dA0nTj6BcDAAoHY6
      Y9e+mg+bMYb/7pXnYdpbmxDtui5k+ZG8+1Z5QN1uQjU/j+v3xvDg4RQcAGOTc3jq+AJBUZIR
      DgUhSfOwrQo8Pj/8AQ0T8xPwRXrgD8hICmxQr658atigzF2Z11Sj4ixOWd3SBFZZ0bG/r8bs
      DGtLnwnwwc0xpPOVVV/35794Ek8d6VpTW/Zivm4j9EAHXni+A4f7e5DJl9AuEAmZ62BqcgLx
      +TlUDvUhnxjEg7SE/YePY2RwAA9SQP/x4yh096MjKGFyLoW+hd/vdTaoJK+syEiy3HT8t3RG
      3L97C5AU+CMd8Mo2jEAYwwP3cfDocRRzGbR39UBTJNwenl+TEfzFpx5Pw0+SJJTTE/jDP/wj
      tLdFcPzzL+Ol5xYCYZKMzu5+dHT3Q1FVnD13Fi4DNFVF+NzTC38rCJ19ArIswV3Fqvk4YEvr
      AkmaBydPnUK1kMLc3Bzu3h+EZnhgyA7mZqYwMDy5lbf/VEJWdTx59hmobhWOoDZKkgTdMGAY
      BlRFgaKo0BZWvEd/S1AUGZIk7bpVf6ewpTuALrl4cP8BIrF2lMtT8Pm8MBQHyVQKqicAYxVH
      2bdQDyPQiVde+RYKyXN4OL/9haQ+bdhSATh09AT/u6uzve6z3gXbjTGGv/8Lz6/pULdD3Y+n
      +84sJvEX3/0RHACV3ByCh76As6cPbns7nJKF3N3Est9RfRqCp9uX/c5uwK6wCt+/vjYjeK34
      m189jeN90ZW/uMuh+aL4pW9/m79WtZ3xZDEAWMFTs9s8S0th3QJw++Y1GN4wDh7qxfjAXRid
      R9EV9cOxLRQyKfhCESQTSYT9Bh5OzqF33z7EIgHMJzLobA8jkUgj1tEJTZFxZ2RtRvBa8Wkp
      tiVJ8qPiAi1sCtYtAIwxQJYxPjqOWCyK6flxGPoRzI/fhRHsgabmMDc7hUIoBn8giHQmhVw6
      jkjIj4F79xDs6MXUXAIHezo383k+1ZgYuIkfv3eRv/7sV3/mURyghXVh3V4gw9AB14Whq5hN
      pBEMhTA1+hC6L4pqLoFMtgivPwCv14tKIQtN9yDo92E2kUEkFkMkHIJHb50XvBbsP/4U/uvf
      +C9hMBPFfAHWKgJGLSyPde8Ax08uzkntXyo7T/igS0hiCvo8YIzht3/xBZjW1vmlD/d8eozm
      cnYKVSmIZ5/qwNRcGs+ebHGpNoJdYQS/e3UEtsvwD779uS27x3qKKO1G+GIH8I1v6rh95WM8
      86W9xWbdjdhUARgZegDTkbCvtxflfA7BWDvK2SS8oRiYVYYra8ilEghFY/B4fXAsE4Zh4O5o
      HNU1uEEfWzCG3NxDfHI7jS8+eRgXbw6h72vPNPsiLn70AaLt+9B/YD/u3LoJCcDRJ57AyINR
      9LR7UFYjOLCvbbufYNdhUwWAPF9WOY28qSAzPIj5eAqhtijcio1YLIBAMIiZ2RkokgzVCKC/
      t2UErxrMwbtvv4crg2mUkgfwzW+90vx7rgVIOlzGYJczCHf0Y39Mxng8idT8NFy5F+eeals3
      Gc51Vg7AMba+0oXAHibDGYYOq2wBsoZYJIiK4sK0LHR0dgI24FFtTM7OIdy+D+XkNHr6a1v4
      S88dguMyOKvo2PWCsa29/kbusWpagqzilV/9b6D/1XeRLDhLkvuYpOKFz34GxdQkxmezYLKB
      SlmCphkIRWq7seW60IUar2uBraw8QSVp/aUL9ywZrvf/b+/cf9o8rzj+eZ7XV2zjC9gGc/OC
      XZM4QAgsiZAyVaPZJnXTtqbaWnXLtPSH/UvTpLapNqlVVWlaF22JVqXR1C5aEqrW4dIY7IRL
      MBgMOMYxNvh99wOXmV7AtAXc1l/J0rF1/JyjV8/Re855nnNO66d8UnsNvuadrTsc7s2+nw0b
      p4SapvHcD07suKp8UDiM+y8HLSO7NEGq4OTH5xzcuHWP5y/0fYZHK64Ti8VZ1wTBYJC56QfM
      piEYbMKggafOyvzCMr5qW8rKCIKFOPj+BodhYIcho8bRjJJ9l7f/pfLzX/3m8/XQGQiGOra/
      t/j/30e0qakBAF/1PA2oAAM4jM1/WHIOWkZm7j7X7qZ46fIfDlTOdwlHbgCwUczxIDaOMNlo
      dtcy/uAR7cEgS6l5PF5vWf1vsulFphJJrHYXHoeZ2MNp3A3N2IwQfziN29eMzaBt0q2IQobH
      qyr+Zg/ZNYHVWN6jyK8sM7mQJdDiJjoWw+qox+e2cz8aw+YsoV1uHCbBVPIxoYCfZDKJ17u/
      Ip7PPiiNW+/9k+WZYQDOPv0TuoLVk+CvgoowgKXZCaTNS3FpgpFUipY2L+PjY+Tza9Q66zAb
      9lZTGsyEQiEGBz9keV7hqXAXw5EIegmhk10MRSLoJHRs0kaDHoNO8iC+grm2HqunnJSgxv3Y
      JEJK4tFFGr53nPjoPXKpBL5AmNhIhFxqhqbgScaHI6QNBrxWhejDKQq5VercHnRlBHhfBL3Z
      wYu//R3f7w586TWq2ImKGJSdz+exWCzUmE3YHHYmJ2fIZTMYTCbi4+NlraFXNAbv3KGt/Sk0
      IdErEkWnoEmJbpOmhLaaDWRWVkjMLbA8lyC7tnf2ZixylzwKs4kEy6sqNqOCTq/jiQo2g0TR
      6cipAqtBQdHpqHPYmFp8Qm7xEYYaK9Gx3Qe/7QWTvaG6+b9mVIQBuDwNPIwOMz2/QktrC267
      Ff+xdlZX0gilvCu/kcE7GG0OnqxkcFpNjIyMgmLEaTExMvoJQjHisBg3aJ2J1mMBjCYzAX8T
      mVweXRn+e/vJXnrCIbxeLwFfHR8PjZIvqLR5nHw09AmFdY0Wt4OP7o1SWN9oCWkxGWkPBEmn
      khiM1ciz0lARLpDR4qS3xw4IpBT42tpBCJw9PWUHlqfOnt8+0JGykcaSLhCldGl3iOMnwgjA
      3dhaVgZHSomUks6uToQQdNcXEVLuoAG63eo2Heg4gQD6TjnLylcfBB5NxFkpQCDQxvxsinqX
      hYXHazS4vz13pL4sKsIAYGcKcWvT72fDfHoDl+bjv4jesi25z+zNln6yZK1SWnyejCOqwV3P
      LbOYg2a7YGp2gcWZJPNzawTD3YemQzaZ5v7fB3flaezx03j68Os2KsIFquLgsL6Wx2S2YLZY
      KORXWZydZFXUYDrsemxN2/VzVBVkVQP4lsNocZJOTjIancDjqcPV0IrPLplMpI5atYpAxbhA
      VRwMhGKgt6+XjQI+Qc/p6myxUnxjDOCNK38knVMJn3ma870n9v3/ociHhMKnKefNv5ae4eZw
      kgv9p3b8fuuD/3Cuvx8h4Morr3Dp8sto+cdcef0vrBYVnn/pEvH/XieaMdFmzDCruXjhZwP7
      1vXrhhByOxYpDXe2boMW1opEp3d/Ixj1OoLNLjRNQ5Og99bsyi8NkmKxiKZpSJMed9fuhTs1
      Hvs2f73fw/Efdu3K72p1b/P7T/oRe/gyvnYfxWIRuZm02MI3xgAyRT0v//45/vTaO6zPjTIU
      n+PixV/y3o13cTW2I9ITJHI6zp8KcO3G+3SdG2A5PkgqneVYuJerb71KZ/9POROq5+YHd+ns
      v4BIRbkXm2Hg2Yvcuv42OVnL5UsvoBZyJOaXALj972vc/niMH/3iRdJLaRYejfHmX6+TSG2M
      eL1z8yrdz/yazvocf/7bO8Ruv094YICr/7jJ2WcvHuUj2xOKoiCEQK+XdAfKG06uqirSJNG3
      lZdBUlUVc20NLWfKG+ahqiq+UAu+0N4n3Npm7BDq6yDU11E2f6kB/A/VXcEBSdvz/AAAAABJ
      RU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Map Of The World' width='192'>
      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
      HOP/A2LlkQVFlVOwAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Top 20 Companies With The Largest Laid Off&apos;s' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Years with the Largest Laid Off&apos;s' width='192'>
      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
      AAAAAElFTkSuQmCC
    </thumbnail>
  </thumbnails>
</workbook>
